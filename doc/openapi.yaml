openapi: "3.0.2"
info:
  title: Krill RPKI Server API
  version: 0.4.0
  description: |
    # API
    Welcome to the documentation for the Krill server API, a JSON based REST-like API for managing your Krill Certificate Authorities and Publishers.
    # Versioning
    The API path includes a version. The idea is that we may add functionality, but will not introduce breaking changes to existing functionality. You may expect additional resources, and you may see additional data (json members) within resources. So, please make sure that you ignore what you don’t understand when using this API.
    # References
    - [RFC 6492: A Protocol for Provisioning Resource Certificates](https://tools.ietf.org/html/rfc6492)
    - [RFC 8181: A Publication Protocol for the Resource Public Key Infrastructure (RPKI)](https://tools.ietf.org/html/rfc8181)
    - [RFC 8183: An Out-of-Band Setup Protocol for Resource Public Key Infrastructure (RPKI) Production Services](https://tools.ietf.org/html/rfc8183)
  license:
    name: Mozilla Public License 2.0
    url: https://www.mozilla.org/en-US/MPL/2.0/
  x-logo:
    url: https://nlnetlabs.nl/static/logos/Krill/Krill_Logo_FC.svg
    backgroundColor: #FFFFFF

servers:
- url: https://{domain}:{port}/api/v1
  description: Krill server API URL.
  variables:
    domain:
      default: localhost
    port:
      enum:
        - '443'
        - '3000'
      default: '3000'

tags:
- name: "Publishers"

- name: "Certificate Authorities"

- name: "Other"
  description: ""

security: 
- krillApiToken: []

paths:
  /health:
    get:
      tags:
        - "Other"
      summary: Perform an authenticated health check.
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'

  /publishers:
    get:
      tags:
        - "Publishers"
      summary: List publishers.
      responses:
        '200':
          $ref: '#/components/responses/ListPublishers'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/GeneralPublicationServerError'

    post:
      tags:
        - "Publishers"
      summary: Add publisher.
      description: |
        Adds an RFC 8181 publisher. Expects a JSON representation of the
        [RFC 8183 XML](https://tools.ietf.org/html/rfc8183#section-5.2.3).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPublisherRequest'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/PublisherHandleAlreadyInUse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/GeneralPublicationServerError'

  /publishers/{publisher_handle}:
    get:
      tags:
        - "Publishers"
      summary: Show details for publisher.
      description: Shows the information for a publisher by a given handle.
      parameters:
        - $ref: '#/components/parameters/publisher_handle'
      responses:
        '200':
          $ref: '#/components/responses/GetPublisher'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/UnknownPublisher'
        '500':
          $ref: '#/components/responses/GeneralPublicationServerError'

    delete:
      tags:
        - "Publishers"
      summary: Delete a publisher.
      description: This action also removes all the published content for a publisher.
      parameters:
        - $ref: '#/components/parameters/publisher_handle'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/UnknownPublisher'
        '500':
          $ref: '#/components/responses/GeneralPublicationServerError'

  /publishers/{publisher_handle}/response.xml:
    get:
      tags:
        - "Publishers"
      summary: Get XML Response for publisher.
      description: Gets the RFC 8183 XML Repository Response for a publisher.
      parameters:
        - $ref: '#/components/parameters/publisher_handle'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/UnknownPublisher'
        '500':
          $ref: '#/components/responses/GeneralPublicationServerError'

  /cas:
    get:
      tags:
        - "Certificate Authorities"
      summary: List CAs.
      responses:
        '200':
          $ref: '#/components/responses/ListCAs'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/GeneralCAServerError'

    post:
      tags:
        - "Certificate Authorities"
      summary: Add a CA.
      description: |
        When adding a CA you need to choose a “handle”, essentially just a
        name. The term “handle” comes from RFC 8183 and is used in the
        communication protocol between CAs and CAs and publication servers.

        When a CA has been added, it is registered to publish locally in the
        Krill instance where it exists, but other than that it has no
        configuration yet. In order to do anything useful with a CA you will
        first have to add at least one parent to it, and then most likely some
        Route Authorizations and/or Child CAs.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCARequest'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/CAHandleAlreadyInUse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/GeneralCAServerError'

  /cas/{ca_handle}:
    get:
      tags:
        - "Certificate Authorities"
      summary: Show a CA.
      description: Show CA details.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          $ref: '#/components/responses/GetCA'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/UnknownCA'
        '500':
          $ref: '#/components/responses/GeneralCAServerError'

  /cas/{ca_handle}/children:
    post:
      tags:
        - "Certificate Authorities"
      summary: Add a child CA.
      description: |
        This adds an embedded (in the same Krill instance) or remote child CA.
        For a remote child CA the request body must include a JSON
        representation of the [RFC 8183 Child Request XML](https://tools.ietf.org/html/rfc8183#section-5.2.1),
        though the 'tag' and 'child_handle' attributes are ignored.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCAChildRequest'
            examples:
              embedded:
                value:
                  handle: 'ca'
                  resources:
                    asn: 'AS1'
                    v4: '10.0.0.0/8'
                    v6: '::'
                  auth:
                    t: 'Embedded'
              remote:
                value:
                  handle: 'ca'
                  resources:
                    asn: 'AS1'
                    v4: '10.0.0.0/8'
                    v6: '::'
                  auth:
                    t: 'Rfc8183'
                    c:
                      tag: null
                      child_handle: 'ca-from-req'
                      id_cert: '<base64>'
      responses:
        '200':
          $ref: '#/components/responses/AddChildCA'
        '400':
          description: Bad request parameters.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ChildWithHandleExists'
                  - $ref: '#/components/schemas/ChildMustHaveResources'
                  - $ref: '#/components/schemas/ChildCannotHaveResourcesNotHeldByParent'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/GeneralCAServerError'

  /cas/{ca_handle}/child_request:
    get:
      tags:
        - "Certificate Authorities"
      summary: Show CA RFC 8183 Request XML.
      description: Shows the RFC 8181 Child Request for this CA.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          $ref: '#/components/responses/GetChildRequestXML'
        '404':
          $ref: '#/components/responses/UnknownCA'
        '500':
          $ref: '#/components/responses/GeneralCAServerError'

  /cas/{ca_handle}/children/{child_handle}:
    post:
      tags:
        - "Certificate Authorities"
      summary: Update an existing child of a CA.
      description: |
        This action is idempotent.
        **Note:** You can only update the complete resource set! If you leave
        out a resource - like asn in the example - then the child will lose all
        resources of that type.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/child_handle'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCAChildRequest'
            examples:
              update_resources:
                summary: Update the resources for a child.
                value:
                  id_cert: null
                  resources:
                    asn: ''
                    v4: '10.0.0.0/8'
                    v6: '::'
              update_id_cert:
                summary: Update the ID certificate for a remote child.
                value:
                  id_cert: '<base64>'
                  resources: null
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/UnknownChild'
        '500':
          $ref: '#/components/responses/GeneralCAServerError'

    get:
      tags:
        - "Certificate Authorities"
      summary: Show info for a child.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/child_handle'
      responses:
        '200':
          $ref: '#/components/responses/GetChildCA'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Unknown resource.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/UnknownChild'
                  - $ref: '#/components/schemas/UnknownCA'
        '500':
          $ref: '#/components/responses/GeneralCAServerError'

    delete:
      tags:
        - "Certificate Authorities"
      summary: Remove a child CA.
      description: |
        Removes a child, revokes its certificates and removes them from the
        repository. Use with care, although you can re-add a removed child,
        this is probably best avoided.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/child_handle'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Unknown resource.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/UnknownChild'
                  - $ref: '#/components/schemas/UnknownCA'
        '500':
          $ref: '#/components/responses/GeneralCAServerError'

  /cas/{ca_handle}/children/{child_handle}/contact:
    get:
      tags:
        - "Certificate Authorities"
      summary: Show parent contact for a child.
      description: |
        This is the parent contact that a child can use when adding the parent.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/child_handle'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentContactForChildCA'
              examples:
                rfc6492:
                  value:
                    t: 'Rfc6492'
                    c:
                      tag: null
                      id_cert: '<base64>'
                      parent_handle: 'ta'
                      child_handle: 'ca'
                      service_uri: 'https://localhost:3000/rfc6492/ta'
                embedded:
                  value:
                    t: 'Embedded'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Unknown resource.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/UnknownChild'
                  - $ref: '#/components/schemas/UnknownCA'
        '500':
          $ref: '#/components/responses/GeneralCAServerError'

  /cas/{ca_handle}/history:
    get:
      tags:
        - "Certificate Authorities"
      summary: Show full history of a CA.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'

  /cas/{ca_handle}/id:
    post:
      tags:
        - "Certificate Authorities"
      summary: Regenerate CA ID certificate.
      description: |
        Tells the CA to create a new ID certificate and forget its old ID. Note
        that if you do this, you will have to create new RFC 8181 Child Request
        and Publisher Request XML for the parent CA(s) and Repository. Don't
        use this if you can avoid it.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/UnknownCA'
        '500':
          $ref: '#/components/responses/GeneralCAServerError'

  /cas/{ca_handle}/parents:
    post:
      tags:
        - "Certificate Authorities"
      summary: Add a parent to a CA.
      description: |
        Adds an embedded or remote parents. For remote parents the RFC 6492
        will be used. In principle CAs can also use this to talk to a local
        parent CA in the same krill server, but this is inefficient. Therefore
        it is also possible to add an 'embedded' parent in this case.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddParentCARequest'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '400':
          $ref: '#/components/schemas/ParentWithHandleExists'
        '404':
          $ref: '#/components/responses/UnknownCA'
        '500':
          $ref: '#/components/responses/GeneralCAServerError'

  /cas/{ca_handle}/parents/{parent_handle}:
    get:
      tags:
        - "Certificate Authorities"
      summary: Show parent contact for a CA.
      description: |
        Show the parent contact information that a CA has for a parent.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/parent_handle'
      responses:
        '200':
          $ref: '#/components/responses/GetCAParentContactInfo'
        '403':
          $ref: '#/components/responses/Forbidden'
        '400':
          $ref: '#/components/responses/UnknownParent'
        '404':
          $ref: '#/components/responses/UnknownCA'
        '500':
          $ref: '#/components/responses/GeneralCAServerError'

    post:
      tags:
        - "Certificate Authorities"
      summary: Update the contact information for an existing parent.
      description: |
        Should not be needed often, but say that your parent updates their ID
        cert or service URI for RFC 6492, then you will need to tell the CA.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/parent_handle'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rfc6492TagOrEmbeddedTag'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/UnknownParent'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/UnknownCA'
        '500':
          $ref: '#/components/responses/GeneralCAServerError'

    delete:
      tags:
        - "Certificate Authorities"
      summary: Remove a parent.
      description: |
        Remove a parent from a CA.
        **Note:** this is just the child removing the parent, and this does not
        remove the child from the parent.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/parent_handle'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/UnknownParent'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/UnknownCA'
        '500':
          $ref: '#/components/responses/GeneralCAServerError'

  /cas/{ca_handle}/repo:
    get:
      tags:
        - "Certificate Authorities"
      summary: Show Repository for a CA.
      description: |
        Returns details about the repository is available, or an indication of
        why it is not available.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          $ref: '#/components/responses/GetRepositoryForCA'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/UnknownCA'
        '500':
          $ref: '#/components/responses/GeneralCAServerError'

    post:
      tags:
        - "Certificate Authorities"
      summary: Update the Repository for a CA.
      description: |
        This will update the repository for a CA. I.e. it will trigger the
        following:
          - A check that the new Repository can be reached and allows the CA to
            connect.
          - Re-issue all objects using the base uri for the new repository.
          - Publish the new objects.
          - Request new certificates with SIA entries pointing to the new
            locations.
          - (best effort) Clean up of the old repository.
        The new repository can be embedded, or remote. To use a remote
        repository, the RFC 8181 Repository Response must be encoded into JSON.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRepositoryForCARequest'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          description: Bad request parameters.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AlreadyUsingThisRepository'
                  - $ref: '#/components/schemas/TargetRepositoryDoesNotAllowListQuery'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/UnknownCA'
        '500':
          $ref: '#/components/responses/GeneralCAServerError'


  /cas/{ca_handle}/repo/request:
    get:
      tags:
        - "Certificate Authorities"
      summary: Show the RFC 8181 Publisher Request for a CA.
      description: |
        Returns details about the repository is available, or an indication of
        why it is not available.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  tag:
                    type: string
                    nullable: true
                  publisher_handle:
                    $ref: '#/components/schemas/Handle'
                  id_cert:
                    $ref: '#/components/schemas/IdCert'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/UnknownCA'
        '500':
          $ref: '#/components/responses/GeneralCAServerError'

  /cas/{ca_handle}/keys/roll_activate:
    post:
      tags:
        - "Certificate Authorities"
      summary: Finish roll for all keys held by this CA.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'

  /cas/{ca_handle}/keys/roll_init:
    post:
      tags:
        - "Certificate Authorities"
      summary: Perform a manual key-roll in Krill.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'

  /cas/republish_all:
    post:
      tags:
        - "Certificate Authorities"
      summary: Force that all CAs create new objects if needed (in which case they will also sync).
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'

  /cas/refresh_all:
    post:
      tags:
        - "Certificate Authorities"
      summary: Force that all CAs ask their parents for updated certificates.
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'

  /cas/resync_all:
    post:
      tags:
        - "Certificate Authorities"
      summary: Force that all CAs sync with their repo server.
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'

externalDocs:
  description: Read the Krill documentation
  url: https://rpki.readthedocs.io/en/latest/krill/

components:
  securitySchemes:
    krillApiToken:
     type: http
     scheme: bearer
     bearerFormat: Krill API token

  parameters:
    ca_handle:
      in: path
      name: ca_handle
      schema:
        $ref: '#/components/schemas/Handle'
      required: true
    child_handle:
      in: path
      name: child_handle
      schema:
        $ref: '#/components/schemas/Handle'
      required: true
    parent_handle:
      in: path
      name: parent_handle
      schema:
        $ref: '#/components/schemas/Handle'
      required: true
    publisher_handle:
      in: path
      name: publisher_handle
      schema:
        $ref: '#/components/schemas/Handle'
      required: true

  schemas:
    # Types ordered fundamental to complex
    Element:
      type: object
      properties:
        uri:
          type: string
          format: uri
        hash:
          type: string
          format: hash
    EmbeddedTag:
      type: object
      properties:
        t:
          type: string
          enum: ['Embedded']
    Handle:
      type: string
      maxLength: 255
      pattern: '[\-_A-Za-z0-9/]*'
      example:
        'ca'
    IdCert:
      type: string
      format: base64
    RepoInfo:
      type: object
      properties:
        base_uri:
          type: string
          format: uri
        rpki_notify: 
          type: string
          format: uri
    Resources:
      type: object
      properties:
        asn:
          type: string
        v4:
          type: string
        v6:
          type: string
      example:
        asn: ""
        v4: "10.0.0.0/0"
        v6: "2001:db8::/32"
    ServiceUri:
      type: string
      format: uri
    Rfc6492:
      type: object
      properties:
        tag:
          type: string
          nullable: true
        id_cert:
          $ref: '#/components/schemas/IdCert'
        parent_handle:
          $ref: '#/components/schemas/Handle'
        child_handle:
          $ref: '#/components/schemas/Handle'
        service_uri:
          $ref: '#/components/schemas/ServiceUri'
    Rfc8183:
      type: object
      required:
        - tag
        - child_handle
        - id_cert
      properties:
        tag:
          allOf:
            - type: string
              nullable: true
            - description: Ignored.
        child_handle:
          allOf:
            - $ref: '#/components/schemas/Handle'
            - description: Ignored.
        id_cert:
          $ref: '#/components/schemas/IdCert'
    Rfc6492Tag:
      type: object
      properties:
        t:
          type: string
          enum: ['Rfc6492']
        c:
          $ref: '#/components/schemas/Rfc6492'
    Rfc8183Tag:
      type: object
      properties:
        t:
          type: string
          enum: ['Rfc8183']
        c:
          $ref: '#/components/schemas/Rfc8183'
    Rfc6492TagOrEmbeddedTag:
      oneOf:
        - $ref: '#/components/schemas/EmbeddedTag'
        - $ref: '#/components/schemas/Rfc6492Tag'
    Rfc8183OrEmbedded:
      oneOf:
        - $ref: '#/components/schemas/EmbeddedTag'
        - $ref: '#/components/schemas/Rfc8183Tag'
    RFC8183RequestXML:
      type: object
      properties:
        xmlns:
          type: string
          format: url
          xml:
            attribute: true
        version:
          type: integer
          xml:
            attribute: true
        child_handle:
          type: string
          xml:
            attribute: true
        child_bpki_ta:
          type: string
          format: byte
      xml:
        name: 'child_request'
      example:
        xmlns: http://www.hactrn.net/uris/rpki/rpki-setup/
        version: 1
        child_handle: child
        child_bpki_ta: 'MIIDPDCCAiSgAwIBAgIBATANBgkqhkiG9w0BAQsFADAzMTEwLwYDVQQDEyg4QzE0M0IxNTVBNTMyMDgwN0RBNjZFNDZGOEM1NjMxQTkwMjIyN0QyMCAXDTE5MTExNDIwMzA0NloYDzIxMTkxMTE0MjAzNTQ2WjAzMTEwLwYDVQQDEyg4QzE0M0IxNTVBNTMyMDgwN0RBNjZFNDZGOEM1NjMxQTkwMjIyN0QyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlgTWdF2X4cf83/TROhr3nZUP70PHGHe1edLiqf5wEmZIt8ucf2pSoLWkInCi0IgP3yZZR/HRw4aqlWtRHKfSMXwDNm7+F3aVi+vI/iGi7mITS+nbdln4oEEl8cEyjmRpVCp7f494mWR2fRwkeYiEqmVZriny7vh2mlQMRh8KSBVm7+PiG2Jn4Z2QGU/k0At+Wv2byeio53FXhgnEXRjt57IfBjKjzgO/Ckc9tjTVIIgO1hmXJL6TGu8aoFwGdYUKcRQTTrmfB9dm/nhmuhhm4T0/D+4M1yRpx56p1NIiFdjrnb3+rjP5goz5uQM2e0odOTt5D5RUIIJsZCUHtO5RdwIDAQABo1kwVzAPBgNVHRMBAf8EBTADAQH/MCAGA1UdDgEBAAQWBBSMFDsVWlMggH2mbkb4xWMakCIn0jAiBgNVHSMBAQAEGDAWgBSMFDsVWlMggH2mbkb4xWMakCIn0jANBgkqhkiG9w0BAQsFAAOCAQEAVdQV3sY38KdEUQEZGX8yjr0b86IVJEKBNNZ9mkD9bxuQ0KU5TjRdXB7iHOGOE5hj+tF5At/+4lvMgsw+1VDTmqCc2O7GnxU/P4+Zpbe6JUCPijomq6yJnxhK3zdqsWPiAT4WGmCr1gm3Hk9xK/Xg0k74yY1yf6tPOGN5JA627bK9MEdg6IMuYRkOs9Ja0oJuu0scgSNwvouxGTYIw175GwEIgICXFX0hSWDlyYhrxVQwjiHTDjNUe/4gfNx2mYuLtfGoNJU+7yGfAdMJBPahcgzpQnwRqVW4dtxJrd8EPQ/WGMn50lPDbeFRPtNCh+M6hD2xw4K0qVScOwFUCqMP6g=='

    # Request bodies
    AddCARequest:
      type: object
      required:
        - handle
      properties:
        handle:
          allOf:
          - $ref: '#/components/schemas/Handle'
          - description: The handle attribute uniquely identifies the new Certificate Authority within this Krill instance.
    AddCAChildRequest:
      type: object
      required:
        - handle
        - resources
        - auth
      properties:
        handle:
          allOf:
          - $ref: '#/components/schemas/Handle'
          - description: The handle attribute uniquely identifies the new Certificate Authority within this Krill instance.
        resources:
          $ref: '#/components/schemas/Resources'
        auth:
          $ref: '#/components/schemas/Rfc8183'
    UpdateCAChildRequest:
      type: object
      properties:
        id_cert:
          allOf:
            - $ref: '#/components/schemas/IdCert'
            - description: |
                Base64 of DER encoded is PEM encoded minus the BEGIN and END
                markers.
            - nullable: true
        resources:
          $ref: '#/components/schemas/Resources'
          nullable: true
    AddParentCARequest:
      type: object
      required:
        - handle
        - contact
      properties:
        handle:
          allOf:
          - $ref: '#/components/schemas/Handle'
          - description: The local handle by which your ca refers to this parent.
        contact:
          $ref: '#/components/schemas/Rfc6492TagOrEmbeddedTag'
    AddPublisherRequest:
      type: object
      required:
        - publisher_handle
        - id_cert
      properties:
        publisher_handle:
          $ref: '#/components/schemas/Handle'
        tag:
          type: string
        id_cert:
          $ref: '#/components/schemas/IdCert'
      externalDocs:
        url: https://tools.ietf.org/html/rfc8183#section-5.2.3
    UpdateRepositoryForCARequest:
      oneOf:
        - type: object
          required:
            - t
          properties:
            t:
              type: string
              enum: ['Embedded']
        - type: object
          required:
            - t
            - c
          properties:
            t:
              type: string
              enum: ['Rfc8181']
            c:
              type: object
              properties:
                tag:
                  type: string
                  nullable: true
                publisher_handle:
                  $ref: '#/components/schemas/Handle'
                id_cert:
                  $ref: '#/components/schemas/IdCert'
                service_uri:
                  $ref: '#/components/schemas/ServiceUri'
                repo_info:
                  $ref: '#/components/schemas/RepoInfo'
    ParentContactForChildCA:
      type: object
      properties:
        t:
          type: string
          enum: ['Rfc6492', 'Embedded']
        c:
          type: object
          properties:
            tag:
              type: string
              nullable: true
            id_cert:
              $ref: '#/components/schemas/IdCert'
            parent_handle:
              $ref: '#/components/schemas/Handle'
            child_handle:
              $ref: '#/components/schemas/Handle'
            service_uri:
              $ref: '#/components/schemas/ServiceUri'

    # Error codes ordered ascending by error code
    AlreadyUsingThisRepository:
      type: object
      required:
        - code
        - msg
      properties:
        code:
          type: integer
          enum: [2206]
        msg:
          type: string
    TargetRepositoryDoesNotAllowListQuery:
      type: object
      required:
        - code
        - msg
      properties:
        code:
          type: integer
          enum: [2207]
        msg:
          type: string
    ChildWithHandleExists:
      type: object
      required:
        - code
        - msg
      properties:
        code:
          type: integer
          enum: [2301]
        msg:
          type: string
    ChildMustHaveResources:
      type: object
      required:
        - code
        - msg
      properties:
        code:
          type: integer
          enum: [2302]
        msg:
          type: string
    ChildCannotHaveResourcesNotHeldByParent:
      type: object
      required:
        - code
        - msg
      properties:
        code:
          type: integer
          enum: [2303]
        msg:
          type: string
    ParentWithHandleExists:
      type: object
      required:
        - code
        - msg
      properties:
        code:
          type: integer
          enum: [2304]
        msg:
          type: string
    UnknownChild:
      type: object
      required:
        - code
        - msg
      properties:
        code:
          type: integer
          enum: [2305]
        msg:
          type: string
    UnknownParent:
      type: object
      required:
        - code
        - msg
      properties:
        code:
          type: integer
          enum: [2306]
        msg:
          type: string
    CAHandleAlreadyInUse:
      type: object
      required:
        - code
        - msg
      properties:
        code:
          type: integer
          enum: [2501]
        msg:
          type: string
    UnknownCA:
      type: object
      required:
        - code
        - msg
      properties:
        code:
          type: integer
          enum: [2502]
        msg:
          type: string

  responses:
    Success:
      description: Success.
    Forbidden:
      description: Forbidden (incorrect authentication token).
    NotFound:
      description: Not Found.
    UnknownPublisher:
      description: Unknown publisher.
      content:
        application/json:
          schema:
            type: object
            required:
              - code
              - msg
            properties:
              code:
                type: integer
                enum: [2201]
              msg:
                type: string
    UnknownCA:
      description: Unknown CA.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnknownCA'
    UnknownChild:
      description: Unknown child.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnknownChild'
    UnknownParent:
      description: Unknown parent.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnknownParent'
    GeneralPublicationServerError:
      description: General Publication Server error.
      content:
        application/json:
          schema:
            type: object
            required:
              - code
              - msg
            properties:
              code:
                type: integer
                enum: [3006]
              msg:
                type: string
    GeneralCAServerError:
      description: General CA Server issue.
      content:
        application/json:
          schema:
            type: object
            required:
              - code
              - msg
            properties:
              code:
                type: integer
                enum: [3005]
              msg:
                type: string
    PublisherHandleAlreadyInUse:
      description: Publisher handle already in use.
      content:
        application/json:
          schema:
            type: object
            required:
              - code
              - msg
            properties:
              code:
                type: integer
                enum: [2102]
              msg:
                type: string
    CAHandleAlreadyInUse:
      description: CA handle already in use.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CAHandleAlreadyInUse'
    GetCA:
      description: Success.
      content:
        application/json:
          schema:
            type: object
            properties:
              handle:
                $ref: '#/components/schemas/Handle'
              repo_info:
                $ref: '#/components/schemas/RepoInfo'
              parents:
                type: array
                items:
                  type: object
                  properties:
                    handle:
                      type: string
                    kind:
                      type: string
              resources:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    name_space:
                      type: string
                    parent_handle:
                      $ref: '#/components/schemas/Handle'
                    keys:
                      type: object
                      additionalProperties:
                        type: object
                        properties:
                          key_id:
                            type: string
                          incoming_cert:
                            type: object
                            properties:
                              cert:
                                type: string
                                format: base64
                              uri:
                                type: string
                                format: uri
                              resources:
                                type: object
                                properties:
                                  asn:
                                    type: string
                                  v4:
                                    type: string
                                  v6:
                                    type: string
                          request:
                            type: string
                            nullable: true
                    current_objects:
                      type: object
                      additionalProperties:
                        type: object
                        properties:
                          content:
                            type: string
                            format: base64
                          serial:
                            type: string
                          expires:
                            type: string
                            format: date-time
              children:
                type: array
                items:
                  type: string
          example:
            handle: 'ca'
            repo_info:
              base_uri: 'rsync://localhost/repo/ca/'
              rpki_notify: 'https://localhost:3000/rrdp/notification.xml'
            parents:
              - handle: 'ta'
                kind: 'Ta'
            resources:
              '0':
                name_space: '0'
                parent_handle: 'ta'
                keys:
                  'Active':
                    key_id: '9610..D6BD'
                    incoming_cert:
                      cert: 'MIII..89U='
                      uri: 'rsync://localhost:3000/repo/ta/ta.cer'
                      resources:
                        asn: 'AS0-AS4294967295'
                        v4: '0.0.0.0/0'
                        v6: '::/0'
                    request: null
                current_objects:
                  '9610..D6BD.crl':
                    content: 'MIID..DDo='
                    serial: '2'
                    expires: '2019-11-26T15:00:32.158033036Z'
                  '3534..672F.cer':
                    content: 'MIIH..2bI='
                    serial: '87065729750653489815092730763761996670858255271'
                    expires: '2020-11-25T15:00:32Z'
                  '9610..D6BD.mft':
                    content: 'MIIL..EudG'
                    serial: '302418467153739817428239791421164424712524512622'
                    expires: '2019-11-26T15:00:32.161634834Z'
            children:
              - 'child'
    ListCAs:
      description: Success.
      content:
        application/json:
          schema:
            type: object
            properties:
              cas:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      allOf:
                      - $ref: '#/components/schemas/Handle'
                      - description: The RFC-8183 handle that uniquely identifies the CA in this Krill instance.
    AddChildCA:
      description: Success.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rfc6492TagOrEmbeddedTag'
    GetChildCA:
      description: Success.
      content:
        application/json:
          schema:
            type: object
            properties:
              id_cert:
                type: object
                properties:
                  pem:
                    type: string
                    format: pem
                  hash:
                    type: string
                    format: hash
              entitled_resources:
                $ref: '#/components/schemas/Resources'
    ListPublishers:
      description: Success.
      content:
        application/json:
          schema:
            type: object
            properties:
              publishers:
                type: array
                items:
                  type: object
                  properties:
                    handle:
                      $ref: '#/components/schemas/Handle'
                    links:
                      type: array
                      items:
                        type: object
                        properties:
                          rel:
                            type: string
                            enum: [self]
                          link:
                            type: string
                            format: uri
          example:
            publishers:
              - handle: 'ca'
                links:
                  rel: 'self'
                  link: '/api/v1/publishers/ca'
    GetPublisher:
      description: Success.
      content:
        application/json:
          schema:
            type: object
            properties:
              handle:
                $ref: '#/components/schemas/Handle'
              id_cert:
                $ref: '#/components/schemas/IdCert'
              base_uri:
                type: string
                format: uri
              current_files:
                type: array
                items:
                  type: object
                  properties:
                    base64:
                      type: string
                      format: base64
                    uri:
                      type: string
                      format: uri
    GetChildRequestXML:
      description: OK
      content:
        application/xml:
          schema:
            $ref: '#/components/schemas/RFC8183RequestXML'
    GetRepositoryForCA:
      description: Success.
      content:
        application/json:
          schema:
            oneOf:
              - type: object
                properties:
                  contact:
                    type: object
                    properties:
                      t:
                        type: string
                        enum: ['Embedded','rfc8181']
                      c:
                        $ref: '#/components/schemas/RepoInfo'
                  state:
                    type: object
                    properties:
                      t:
                        type: string
                        enum: ['List']
                      c:
                        type: object
                        properties:
                          elements:
                            type: array
                            items:
                              $ref: '#/components/schemas/Element'
              - type: object
                properties:
                  state:
                    type: object
                    properties:
                      t:
                        type: string
                        enum: ['Error']
                      c:
                        type: string
    GetCAParentContactInfo:
      description: Success.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rfc6492TagOrEmbeddedTag'

  examples:
    rfc6492:
      value:
        t: 'Rfc6492'
        c:
          tag: null
          id_cert: '<base64>'
          parent_handle: 'ta'
          child_handle: 'ca'
          service_uri: 'https://localhost:3000/rfc6492/ta'
