openapi: "3.0.2"
info:
  title: Krill RPKI Server API
  version: 0.2.1
  description: |
    # API
    Welcome to the documentation for the Krill server API, a JSON based REST-like API for managing your Krill Certificate Authorities and Publishers.
    # Versioning
    The API path includes a version. The idea is that we may add functionality, but will not introduce breaking changes to existing functionality. You may expect additional resources, and you may see additional data (json members) within resources. So, please make sure that you ignore what you don’t understand when using this API.
    # References
  license:
    name: Mozilla Public License 2.0
    url: https://www.mozilla.org/en-US/MPL/2.0/

servers:
- url: https://localhost:3000/api/v1
  description: Your local Krill deployment.

- url: https://ximontest.do.nlnetlabs.nl/api/v1
  description: Test deployment.

tags:
- name: "Certificate Authorities"
  description: "Managing ‘organisational’ CAs in Krill."

- name: "Publishers"

- name: "Other"
  description: ""

security: 
- krillApiToken: []

paths:
  /health:
    get:
      tags:
      - "Other"
      summary: Perform an authenticated health check.
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /cas:
    get:
      tags:
      - "Certificate Authorities"
      summary: List the current CAs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  cas:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          allOf:
                          - $ref: '#/components/schemas/Handle'
                          - description: The RFC-8183 handle that uniquely identifies the CA in this Krill instance.
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      tags:
      - "Certificate Authorities"
      summary: Add a new CA.
      description: |
        When adding a CA you need to choose a “handle”, essentially just a
        name. The term “handle” comes from RFC 8183 and is used in the
        communication protocol between CAs and CAs and publication servers.

        When a CA has been added, it is registered to publish locally in the
        Krill instance where it exists, but other than that it has no
        configuration yet. In order to do anything useful with a CA you will
        first have to add at least one parent to it, and then most likely some
        Route Authorizations and/or Child CAs.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCertificateAuthorityRequest'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /cas/{ca_handle}:
    get:
      tags:
      - "Certificate Authorities"
      summary: Show details of a CA.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          $ref: '#/components/responses/GetCertificateAuthorityResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /cas/{ca_handle}/children:
    post:
      tags:
      - "Certificate Authorities"
      summary: Add a child to a CA.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCertificateAuthorityChildRequest'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /cas/{ca_handle}/child_request:
    get:
      tags:
      - "Certificate Authorities"
      summary: Show this CA's RFC8183 Request XML.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          description: OK
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/RFC8183RequestXML'

  /cas/{ca_handle}/children/{child_handle}:
    post:
      tags:
      - "Certificate Authorities"
      summary: Update an existing child of a CA.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/child_handle'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCertificateAuthorityChildRequest'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

    get:
      tags:
      - "Certificate Authorities"
      summary: Show info for a child (id and resources).
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/child_handle'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

    delete:
      tags:
      - "Certificate Authorities"
      summary: Remove an existing child from a CA.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/child_handle'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /cas/{ca_handle}/children/{child_handle}/contact:
    get:
      tags:
      - "Certificate Authorities"
      summary: Get the RFC8183 response for a child.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/child_handle'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /cas/{ca_handle}/history:
    get:
      tags:
      - "Certificate Authorities"
      summary: Show full history of a CA.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /cas/{ca_handle}/parents:
    post:
      tags:
      - "Certificate Authorities"
      summary: Add a parent to this CA.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddParentCertificateAuthorityRequest'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /cas/{ca_handle}/keys/roll_activate:
    post:
      tags:
      - "Certificate Authorities"
      summary: Finish roll for all keys held by this CA.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /cas/{ca_handle}/keys/roll_init:
    post:
      tags:
      - "Certificate Authorities"
      summary: Perform a manual key-roll in Krill.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /cas/republish_all:
    post:
      tags:
      - "Certificate Authorities"
      summary: Force that all CAs create new objects if needed (in which case they will also sync).
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /cas/refresh_all:
    post:
      tags:
      - "Certificate Authorities"
      summary: Force that all CAs ask their parents for updated certificates.
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /cas/resync_all:
    post:
      tags:
      - "Certificate Authorities"
      summary: Force that all CAs sync with their repo server.
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

externalDocs:
  description: Read the Krill documentation
  url: https://rpki.readthedocs.io/en/latest/krill/

components:
  securitySchemes:
    krillApiToken:
     type: http
     scheme: bearer
     bearerFormat: Krill API token

  parameters:
    ca_handle:
      in: path
      name: ca_handle
      schema:
        $ref: '#/components/schemas/Handle'
      required: true
    child_handle:
      in: path
      name: ca_handle
      schema:
        $ref: '#/components/schemas/Handle'
      required: true

  schemas:
    Handle:
      type: string
      maxLength: 255
      pattern: '[\-_A-Za-z0-9/]*'
    Auth:
      oneOf:
        - type: string
          enum: [Embedded]
        - type: object
          properties:
            Rfc8183:
              type: object
              properties:
                tag:
                  type: string
                child_handle:
                  $ref: '#/components/schemas/Handle'
                id_cert:
                  type: string
                  format: byte
                  description: BASE64 of DER encoded X509 certificate.
    Resources:
      type: object
      properties:
        asn:
          type: string
        v4:
          type: string
        v6:
          type: string
      example:
        asn: ""
        v4: "10.0.0.0/0"
        v6: "2001:db8::/32"

    AddCertificateAuthorityRequest:
      type: object
      properties:
        handle:
          allOf:
          - $ref: '#/components/schemas/Handle'
          - description: The handle attribute uniquely identifies the new Certificate Authority within this Krill instance.
      required:
        - handle
    AddCertificateAuthorityChildRequest:
      type: object
      properties:
        handle:
          allOf:
          - $ref: '#/components/schemas/Handle'
          - description: The handle attribute uniquely identifies the new Certificate Authority within this Krill instance.
        resources:
          $ref: '#/components/schemas/Resources'
        auth:
          $ref: '#/components/schemas/Auth'
      required:
        - handle
        - resources
    UpdateCertificateAuthorityChildRequest:
      type: object
      properties:
        id_cert:
          type: string
        resources:
          $ref: '#/components/schemas/Resources'
    AddParentCertificateAuthorityRequest:
      type: object
      properties:
        handle:
          allOf:
          - $ref: '#/components/schemas/Handle'
          - description: The local handle by which your ca refers to this parent.
        contact:
          $ref: '#/components/schemas/Auth'
      required:
        - handle
        - contact

    RFC8183RequestXML:
      type: object
      properties:
        xmlns:
          type: string
          format: url
          xml:
            attribute: true
        version:
          type: integer
          xml:
            attribute: true
        child_handle:
          type: string
          xml:
            attribute: true
        child_bpki_ta:
          type: string
          format: byte
      xml:
        name: 'child_request'
      example:
        xmlns: http://www.hactrn.net/uris/rpki/rpki-setup/
        version: 1
        child_handle: child
        child_bpki_ta: 'MIIDPDCCAiSgAwIBAgIBATANBgkqhkiG9w0BAQsFADAzMTEwLwYDVQQDEyg4QzE0M0IxNTVBNTMyMDgwN0RBNjZFNDZGOEM1NjMxQTkwMjIyN0QyMCAXDTE5MTExNDIwMzA0NloYDzIxMTkxMTE0MjAzNTQ2WjAzMTEwLwYDVQQDEyg4QzE0M0IxNTVBNTMyMDgwN0RBNjZFNDZGOEM1NjMxQTkwMjIyN0QyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlgTWdF2X4cf83/TROhr3nZUP70PHGHe1edLiqf5wEmZIt8ucf2pSoLWkInCi0IgP3yZZR/HRw4aqlWtRHKfSMXwDNm7+F3aVi+vI/iGi7mITS+nbdln4oEEl8cEyjmRpVCp7f494mWR2fRwkeYiEqmVZriny7vh2mlQMRh8KSBVm7+PiG2Jn4Z2QGU/k0At+Wv2byeio53FXhgnEXRjt57IfBjKjzgO/Ckc9tjTVIIgO1hmXJL6TGu8aoFwGdYUKcRQTTrmfB9dm/nhmuhhm4T0/D+4M1yRpx56p1NIiFdjrnb3+rjP5goz5uQM2e0odOTt5D5RUIIJsZCUHtO5RdwIDAQABo1kwVzAPBgNVHRMBAf8EBTADAQH/MCAGA1UdDgEBAAQWBBSMFDsVWlMggH2mbkb4xWMakCIn0jAiBgNVHSMBAQAEGDAWgBSMFDsVWlMggH2mbkb4xWMakCIn0jANBgkqhkiG9w0BAQsFAAOCAQEAVdQV3sY38KdEUQEZGX8yjr0b86IVJEKBNNZ9mkD9bxuQ0KU5TjRdXB7iHOGOE5hj+tF5At/+4lvMgsw+1VDTmqCc2O7GnxU/P4+Zpbe6JUCPijomq6yJnxhK3zdqsWPiAT4WGmCr1gm3Hk9xK/Xg0k74yY1yf6tPOGN5JA627bK9MEdg6IMuYRkOs9Ja0oJuu0scgSNwvouxGTYIw175GwEIgICXFX0hSWDlyYhrxVQwjiHTDjNUe/4gfNx2mYuLtfGoNJU+7yGfAdMJBPahcgzpQnwRqVW4dtxJrd8EPQ/WGMn50lPDbeFRPtNCh+M6hD2xw4K0qVScOwFUCqMP6g=='

  responses:
    Success:
      description: Success.
    Forbidden:
      description: Forbidden (incorrect authentication token).
    InternalError:
      description: Internal error.
    GetCertificateAuthorityResponse:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              handle:
                $ref: '#/components/schemas/Handle'
              base_repo:
                type: object
                properties:
                  base_uri:
                    type: string
                    format: url
                  rpki_notify: 
                    type: string
                    format: url
              parents:
                type: object
              resources:
                type: object
              children:
                type: object
              route_authorizations:
                type: array
          example:
            handle: 'ca'
            base_repo:
              base_uri: 'rsync://localhost/repo/ca/'
              rpki_notify: 'https://localhost:3000/rrdp/notification.xml'
            parents: {}
            resources: {}
            children: {}
            route_authorizations: []