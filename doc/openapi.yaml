openapi: "3.0.2"
info:
  title: Krill RPKI Server API
  version: 0.9.0-rc2
  description: |
    # Introduction
    Welcome to the documentation for the Krill server API, a JSON based
    REST-like API for managing your Krill Certificate Authorities and
    Publishers. For more information read the [Krill documentation](https://rpki.readthedocs.io/en/latest/krill/).

    ## Clients
    To interact with a Krill server using this API, either:
    - Use the [Krill CLI](https://rpki.readthedocs.io/en/latest/krill/cli.html).
    - Load this API specification into the Swagger [editor](https://editor.swagger.io/)
      or [viewer](https://petstore.swagger.io/) and use it to submit requests to
      a Krill server via your browser.
    - Use an [OpenAPI 3 generator](https://openapi-generator.tech/docs/generators.html)
      to generate client code based on this API specification.
    - Write your own client code that adheres to this specification.

    ## Versioning
    The API path includes a version. The idea is that we may add functionality,
    but will not introduce breaking changes to existing functionality. You may
    expect additional resources, and you may see additional data (JSON members)
    within resources. So, please make sure that you ignore any JSON members that
    you don’t support or need when using this API.

    ## References
    Information about many of the concepts and data types that Krill works with
    can be found in the following Internet standards documents:
    - [RFC 6492: A Protocol for Provisioning Resource Certificates](https://tools.ietf.org/html/rfc6492)
    - [RFC 8181: A Publication Protocol for the Resource Public Key Infrastructure (RPKI)](https://tools.ietf.org/html/rfc8181)
    - [RFC 8183: An Out-of-Band Setup Protocol for Resource Public Key Infrastructure (RPKI) Production Services](https://tools.ietf.org/html/rfc8183)

    ## Feedback
    Please give feedback and report issues concerning this API specification by
    creating a [Krill GitHub issue](https://github.com/NLnetLabs/krill/issues/new).

    # Authentication
    All Krill API endpoints are protected by [HTTP Bearer Authentication](https://swagger.io/docs/specification/authentication/bearer-authentication/).
    To use the endpoints the client must supply an HTTP Authorization header of the form:
    ```
    Authorization: Bearer <KRILL AUTH TOKEN>
    ```
    The token to use is defined in the Krill server configuration. Do not include
    the '<>' brackets in the request. For more information consult the [Krill documentation](https://rpki.readthedocs.io/en/latest/krill/running.html#admin-token).

    # Errors
    The format of and level of detail included in error reports from a Krill
    server depend on the type of failure that occured:
    - **5XX/Server Errors:** This type of failure occurs within or is caused
      by the environment in which Krill operates, or by bugs within Krill
      itself. Examples include network issues, resource starvation, access
      denied to resources, etc. Such errors are outside the control of Krill
      and may result in HTTP 5XX errors from a proxy in front of Krill or from
      Krill itself, or could manifest themselves as TCP timeouts and/or
      connection failures.
    - **4XX/Client Errors:** This type of failure occurs when the input
      provided to Krill is incorrect, either due to user error, adherence by
      the client to incorrect Krill API specifications, or malicious activity.
      Krill responds with HTTP 4XX errors, where possible with a HTTP response
      body in JSON format consisting of an error code and error message.
      **Note:** Clients should decide which action to take based on the error
      code, not on the error message. Such errors have the following form:
      ```
      {
          "label": "string",
          "msg": "string",
          "args": {
              "key1": "string",
              "key2": "string"
          }
      }
      ```

    Possible keys in the error response json are:
    ```
       "cause":      "The underlying error, usually a system error"
       "ca":         "The handle of the CA that encountered an error"
       "parent":     "The handle by which the CA knows a parent involved in an error"
       "child":      "The handle by which the CA knows its child involved in an error"
       "class_name": "The name of the RFC 6492 Resource Class involved in an error"
       "key_id":     "A Key Identifier for a key involved in an error"
       "prefix":     "The IPv4 or IPv6 prefix in a ROA"
       "asn":        "The ASN in a ROA"
       "max_length": "The max length (if present) for a ROA with issues"
    ```
  license:
    name: Mozilla Public License 2.0
    url: https://www.mozilla.org/en-US/MPL/2.0/
  x-logo:
    url: https://nlnetlabs.nl/static/logos/Krill/Krill_Logo_FC.svg
    backgroundColor: #FFFFFF

servers:
  - url: https://{domain}:{port}/api/v1
    description: Krill server API URL.
    variables:
      domain:
        default: localhost
      port:
        enum:
          - '443'
          - '3000'
        default: '3000'

tags:
  - name: "Certificate Authorities"
  - name: "Key Rolls"
    description: |
      Krill CAs can have 0 or more 'Resource Classes' under each of its (0 or
      more) parents. Krill CAs will talk to all of their parents regularly and
      ask them about their resource entitlements. Typically a CA will have one
      parent and receive all their resources in a single resource class, but it's
      also possible that resources are split into multiple resource classes.
      Krill CAs can also have multiple parents and have resource classes under
      each of them.

      When a krill CA first gets a resource class it will:
      - create a pending key pair
      - request a certificate

      The 'key state' of this resource class is then shown as type "Pending".

      When the CA receives a certificate for this new pair it will be promoted to
      "Active", and publishing of objects will start. I.e. the CA will start
      publishing a manifest and CRL, and any configured ROAs for which the
      prefixes are held by this class.

      Resource classes in the state 'Active' can be rolled. The following phases
      exist in a key roll:
      - RollPending
      - RollNew
      - RollOld
  - name: "Route Authorizations"
    description: |
      Managing Route Authorizations (ROA configs)
  - name: "Other"

security:
  - KRILL_ADMIN_TOKEN: []

paths:
  /authorized:
    get:
      operationId: is_authorized
      tags:
        - "Other"
      summary: Check if the client is authorized.
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'

  /cas:
    get:
      operationId: list_cas
      tags:
        - "Certificate Authorities"
      summary: List CAs.
      responses:
        '200':
          $ref: '#/components/responses/ListCAs'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

    post:
      operationId: add_ca
      tags:
        - "Certificate Authorities"
      summary: Add a CA.
      description: |
        When adding a CA you need to choose a “handle”, essentially just a
        name. The term “handle” comes from RFC 8183 and is used in the
        communication protocol between CAs and CAs and publication servers.

        When a CA has been added, it is registered to publish locally in the
        Krill instance where it exists, but other than that it has no
        configuration yet. In order to do anything useful with a CA you will
        first have to add at least one parent to it, and then most likely some
        Route Authorizations and/or Child CAs.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCARequest'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/CaDuplicateResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

  /cas/{ca_handle}:
    get:
      operationId: get_ca
      tags:
        - "Certificate Authorities"
      summary: Get CA.
      description: Get CA details.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          $ref: '#/components/responses/GetCA'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

  /cas/{ca_handle}/id/child_request.{format}:
    get:
      operationId: get_ca_child_request
      tags:
        - "Certificate Authorities"
      summary: Get CA RFC 8183 Request.
      description: Gets the RFC 8181 Child Request for this CA as JSON or XML.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rfc8183'
            application/xml:
              schema:
                $ref: '#/components/schemas/RFC8183RequestXML'
        '404':
          $ref: '#/components/responses/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

  /cas/{ca_handle}/children:
    post:
      operationId: add_child_ca
      tags:
        - "Certificate Authorities"
      summary: Add a child CA.
      description: |
        This adds a child CA.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCAChildRequest'
            examples:
              child:
                value:
                  handle: 'ca'
                  resources:
                    asn: 'AS1'
                    v4: '10.0.0.0/8'
                    v6: '::'
                  child_request:
                    tag: null
                    child_handle: 'ca'
                    id_cert: '<base64>'
      responses:
        '200':
          $ref: '#/components/responses/Rfc8183ParentResponse'
        '400':
          description: Bad request parameters.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CaChildDuplicateResponse'
                  - $ref: '#/components/schemas/CaChildResourcesRequiredResponse'
                  - $ref: '#/components/schemas/CaChildResourcesExtraResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

  /cas/{ca_handle}/children/{child_handle}:
    get:
      operationId: get_child_ca
      tags:
        - "Certificate Authorities"
      summary: Get child details.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/child_handle'
      responses:
        '200':
          $ref: '#/components/responses/GetChildCA'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Unknown resource.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CaChildUnknownResponse'
                  - $ref: '#/components/schemas/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

    post:
      operationId: update_child_ca
      tags:
        - "Certificate Authorities"
      summary: Update an existing child of a CA.
      description: |
        This action is idempotent.
        **Note:** You can only update the complete resource set! If you leave
        out a resource - like asn in the example - then the child will lose all
        resources of that type.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/child_handle'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCAChildRequest'
            examples:
              update_resources:
                summary: Update the resources for a child.
                value:
                  id_cert: null
                  resources:
                    asn: ''
                    v4: '10.0.0.0/8'
                    v6: '::'
              update_id_cert:
                summary: Update the ID certificate for a remote child.
                value:
                  id_cert: '<base64>'
                  resources: null
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Unknown resource.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CaChildUnknownResponse'
                  - $ref: '#/components/schemas/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

    delete:
      operationId: delete_child_ca
      tags:
        - "Certificate Authorities"
      summary: Remove a child CA.
      description: |
        Removes a child, revokes its certificates and removes them from the
        repository. Use with care, although you can re-add a removed child,
        this is probably best avoided.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/child_handle'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Unknown resource.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CaChildUnknownResponse'
                  - $ref: '#/components/schemas/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

  /cas/{ca_handle}/children/{child_handle}/contact:
    get:
      operationId: get_child_ca_parent_contact
      tags:
        - "Certificate Authorities"
      summary: Get parent contact for a child.
      description: |
        This is the parent contact that a child can use when adding the parent.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/child_handle'
      responses:
        '200':
          $ref: '#/components/responses/Rfc8183ParentResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Unknown resource.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CaChildUnknownResponse'
                  - $ref: '#/components/schemas/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

  /cas/{ca_handle}/children/{child_handle}/parent_response.{format}:
    get:
      operationId: get_child_ca_parent_response
      tags:
        - "Certificate Authorities"
      summary: Get the RFC 8183 Parent Response for a child.
      description: |
        To get the RFC 8183 Parent Response for a child.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/child_handle'
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rfc8183ParentResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/RFC8183ParentResponseXML'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Unknown resource.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CaChildUnknownResponse'
                  - $ref: '#/components/schemas/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

  /cas/{ca_handle}/id:
    post:
      operationId: regenerate_ca_id_cert
      tags:
        - "Certificate Authorities"
      summary: Regenerate CA ID certificate.
      description: |
        Tells the CA to create a new ID certificate and forget its old ID. Note
        that if you do this, you will have to create new RFC 8181 Child Request
        and Publisher Request XML for the parent CA(s) and Repository. Don't
        use this if you can avoid it.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

  /cas/{ca_handle}/parents:
    post:
      operationId: add_ca_parent
      tags:
        - "Certificate Authorities"
      summary: Add or update a parent to a CA.
      description: |
        Add a parent to the CA. Note that your CA will only request a certificate
        from any of its parents after a repository has been configured for it.
        
        Submit the RFC 8183 Parent Response XML, or JSON. The JSON format expects
        the local name for the parent as 'handle', whereas in case of XML this will
        be taken from the `parent_handle`.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddParentCARequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/RFC8183ParentResponseXML'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '400':
          description: Bad request parameters.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CaParentDuplicateResponse'
                  - $ref: '#/components/schemas/CaParentIssueResponse'
        '404':
          $ref: '#/components/responses/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

  /cas/{ca_handle}/parents/{parent_handle}:
    get:
      operationId: get_ca_parent_contact
      tags:
        - "Certificate Authorities"
      summary: Get parent contact for a CA.
      description: |
        Get the parent contact information that a CA has for a parent.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/parent_handle'
      responses:
        '200':
          $ref: '#/components/responses/Rfc8183ParentContact'
        '403':
          $ref: '#/components/responses/Forbidden'
        '400':
          $ref: '#/components/responses/CaParentUnknownResponse'
        '404':
          $ref: '#/components/responses/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

    post:
      operationId: update_ca_parent_contact
      tags:
        - "Certificate Authorities"
      summary: Add or update a parent to a CA.
      description: |
        In this case the local name of the parent is specified in the path. An error
        will be returned in case this name does not match the handle in the submitted JSON.
        If XML was submitted then this will simply override the name found for `publisher_handle`.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/parent_handle'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rfc8183ParentContact'
          application/xml:
            schema:
              $ref: '#/components/schemas/RFC8183ParentResponseXML'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          description: Bad request parameters.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CaParentUnknownResponse'
                  - $ref: '#/components/schemas/CaParentIssueResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

    delete:
      operationId: delete_ca_parent
      tags:
        - "Certificate Authorities"
      summary: Remove a parent.
      description: |
        Remove a parent from a CA.
        **Note:** this is just the child removing the parent, and this does not
        remove the child from the parent.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/parent_handle'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/CaParentUnknownResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

  /cas/{ca_handle}/repo:
    get:
      operationId: get_ca_repository
      tags:
        - "Certificate Authorities"
      summary: Get Repository for a CA.
      description: |
        Returns details about the repository.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          $ref: '#/components/responses/GetRepositoryForCA'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

    post:
      operationId: update_ca_repository
      tags:
        - "Certificate Authorities"
      summary: Update the Repository for a CA.
      description: |
        This will add a repository to the CA, if one was not defined earlier.
        In that case it will also trigger that the CA requests resource certificates
        from its parents (if configured) now that it knows which URIs to use.
        
        If the CA did have a repository configured, then this will trigger an
        update of the configured repository by means of a key rollover for all
        existing certificates received under each parent. The new key will use
        the new repository, but the current key will keep using the old repository
        until the new key is activated. Note API end point for key activiation
        will need to be called for this (this will activate *ALL* keys for the CA).
        
        Post either an RFC 8183 Repository Response XML file, or a JSON equivalent.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                repository_response:
                  $ref: '#/components/schemas/Rfc8183RepositoryResponse'
          application/xml:
            schema:
              $ref: '#/components/schemas/RFC8183RepositoryResponseXML'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          description: Bad request parameters.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CaRepoSameResponse'
                  - $ref: '#/components/schemas/CaRepoIssueResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

  /cas/{ca_handle}/id/publisher_request.{format}:
    get:
      operationId: get_ca_publisher_request
      tags:
        - "Certificate Authorities"
      summary: Get the RFC 8183 Publisher Request for a CA.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rfc8183PublisherRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/RFC8183PublisherRequestXML'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

  /cas/{ca_handle}/keys/roll_init:
    post:
      operationId: init_key_roll
      tags:
        - "Key Rolls"
      summary: Initiate a key roll.
      description: |
        When a key roll is initiated the following steps are executed:
        - A new key pair is created in state 'pending'.
        - A resource certificate is requested for the new key.

        The resource class will now have state 'RollPending'

        However, you may not observe this for long, as the request is sent to
        the parent immediately, and as soon as a certificate is received for
        the new key, the state moves from 'RollPending' to 'RollNew' and a MFT
        and CRL are published for the new key. All other objects (ROAs,
        delegated certificates) are still published under the active key.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

  /cas/{ca_handle}/keys/roll_activate:
    post:
      operationId: activate_key_roll
      tags:
        - "Key Rolls"
      summary: Finish a key roll.
      description: |
        According the RFC new keys can be activated only after 24 hours. In
        practice however, this can also be done sooner. The main thing to keep
        in mind is that is only done after the parent CA has *published* the
        new certificate for the 'new' key - which might be some time after you
        actually received the certificate.

        In short: it's best to perform this step 24 hours after initialising a
        key roll, but if your old key is really compromised then you should
        probably just go ahead and do this asap.

        When a key roll is finished, the following happens:
        - The state is moved from 'RollNew' to 'RollOld'.
        - The new key becomes 'active' and will now also publish ROAs and
          delegates certs.
        - The former 'active' key becomes 'old' and only publishes a manifest
          and CRL, but no other objects.
        - A revocation request for the 'old' key is created.

        This state is also easy to miss, because Krill will immediately (but
        asynchronously) send the revocation request to the applicable parent
        and when it receives confirmation that the key is revoked it will:
        - Withdraw the manifest and crl for that key.
        - Move the state to 'Active' (and forget the old key).
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

  /bulk/cas/publish:
    post:
      operationId: republish_all_cas
      tags:
        - "Certificate Authorities"
      summary: Force that all CAs create new objects if needed (in which case they will also sync).
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'

  /bulk/cas/sync/parent:
    post:
      operationId: refresh_all_cas
      tags:
        - "Certificate Authorities"
      summary: Force that all CAs ask their parents for updated certificates.
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'

  /bulk/cas/sync/repo:
    post:
      operationId: resync_all_cas
      tags:
        - "Certificate Authorities"
      summary: Force that all CAs sync with their repo server.
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '403':
          $ref: '#/components/responses/Forbidden'

  /cas/{ca_handle}/routes:
    get:
      operationId: list_route_authorizations
      tags:
        - "Route Authorizations"
      summary: List route authorizations.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ROA'
              example:
                - asn: 64497
                  prefix: 192.168.1.0/24
                  max_length: 16
                - asn: 64497
                  prefix: 10.0.3.0/24
                  max_length: 24

        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

    post:
      operationId: update_route_authorizations
      tags:
        - "Route Authorizations"
      summary: Update route authorizations.
      description: |
        Updates the ROA configurations. Users of a CA can configure which
        routes they want to be authorized, and Krill will then take care of
        creating the actual ROA RPKI objects.

        Updates are sent as a delta containing all additions and removals. This
        is done because often it is needed to update multiple ROAs in a single
        transaction in order to avoid invalidating certain announcements. E.g.
        when you have announcements from more than one ASN, or when you also
        announce more specific prefixes.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ROADelta'
            example:
              added:
                - asn: 64497
                  prefix: 192.168.1.0/24
                  max_length: 16
                - asn: 64497
                  prefix: 10.0.3.0/24
                  max_length: 24
              removed:
                - asn: 64497
                  prefix: 10.0.0.0/24
                  max_length: 24

      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/RoaDeltaError'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

  /cas/{ca_handle}/routes/try:
    post:
      operationId: try_update_route_authorizations
      tags:
        - "Route Authorizations"
      summary: Try to update route authorizations, returns advice in case of issues
      description: |
        Tries to updates the ROA configurations.

        Returns an empty response if successful, or an extended advice in case the
        update would result in any invalid announcements for the prefixes in the
        change set.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ROADelta'
            example:
              added:
                - asn: 64497
                  prefix: 192.168.1.0/24
                  max_length: 16
                - asn: 64497
                  prefix: 10.0.3.0/24
                  max_length: 24
              removed:
                - asn: 64497
                  prefix: 10.0.0.0/24
                  max_length: 24

      responses:
        '200':
          description: Try update response.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/Success'
                  - $ref: '#/components/schemas/BgpAnalysisAdvice'
              example:
                effect:
                  - asn: 64497
                    prefix: 192.168.1.0/24
                    state: roa_seen
                    authorizes:
                      - asn: 64497
                        prefix: 192.168.1.0/24
                  - asn: 64497
                    prefix: 10.0.3.0/24
                    state: roa_unseen
                  - asn: 64498
                    prefix: 192.168.1.0/24
                    state: roa_unseen
                  - asn: 64496
                    prefix: 10.0.0.0/22
                    max_length: 23
                    state: roa_too_permissive
                    authorizes:
                      - asn: 64496
                        prefix: 10.0.0.0/22
                      - asn: 64496
                        prefix: 10.0.2.0/23
                    disallows:
                      - asn: 64497
                        prefix: 10.0.0.0/22
                      - asn: 64496
                        prefix: 10.0.0.0/24
                  - asn: 0
                    prefix: 10.0.4.0/24
                    state: roa_as0
                  - asn: 0
                    prefix: 192.168.1.0/24
                    state: roa_as0_redundant
                    made_redundant_by:
                      - asn: 64497
                        prefix: 192.168.1.0/24
                      - asn: 64498
                        prefix: 192.168.1.0/24
                  - asn: 64496
                    prefix: 10.0.0.0/22
                    state: announcement_valid
                    allowed_by:
                      asn: 64496
                      prefix: 10.0.0.0/22
                      max_length: 23
                  - asn: 64496
                    prefix: 10.0.2.0/23
                    state: announcement_valid
                    allowed_by:
                      asn: 64496
                      prefix: 10.0.0.0/22
                      max_length: 23
                  - asn: 64497
                    prefix: 192.168.1.0/24
                    state: announcement_valid
                    allowed_by:
                      asn: 64497
                      prefix: 192.168.1.0/24
                  - asn: 64496
                    prefix: 10.0.0.0/24
                    state: announcement_invalid_length
                    disallowed_by:
                      - asn: 64496
                        prefix: 10.0.0.0/22
                        max_length: 23
                  - asn: 64497
                    prefix: 10.0.0.0/22
                    state: announcement_invalid_asn
                    disallowed_by:
                      - asn: 64496
                        prefix: 10.0.0.0/22
                        max_length: 23
                  - asn: 64497
                    prefix: 10.0.0.0/21
                    state: announcement_not_found
                  - asn: 64496
                    prefix: 192.168.0.0/24
                    state: announcement_not_found
                  - asn: 64497
                    prefix: 192.168.0.0/24
                    state: announcement_not_found
                suggestion:
                  stale:
                    - asn: 64497
                      prefix: 10.0.3.0/24
                    - asn: 64498
                      prefix: 192.168.1.0/24
                  not_found:
                    - asn: 64497
                      prefix: 10.0.0.0/21
                    - asn: 64496
                      prefix: 192.168.0.0/24
                    - asn: 64497
                      prefix: 192.168.0.0/24
                  invalid_asn:
                    - asn: 64497
                      prefix: 10.0.0.0/22
                  invalid_length:
                    - asn: 64496
                      prefix: 10.0.0.0/24
                  too_permissive:
                    - current:
                        asn: 64496
                        prefix: 10.0.0.0/22
                        max_length: 23
                      new:
                        - asn: 64496
                          prefix: 10.0.0.0/22
                        - asn: 64496
                          prefix: 10.0.2.0/23
                  as0_redundant:
                    - asn: 0
                      prefix: 192.168.1.0/24
                  keep:
                    - asn: 64497
                      prefix: 192.168.1.0/24
                    - asn: 0
                      prefix: 10.0.4.0/24


        '400':
          $ref: '#/components/responses/RoaDeltaError'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/CaUnknownResponse'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'


  /cas/{ca_handle}/routes/analysis/full:
    get:
      operationId: bgp_analysis_full
      tags:
        - "Route Authorizations"
      summary: Show full analysis of all ROAs and Announcments for CA resources
      description: |
        Show all known announcements for the CA's resources and their RPKI validity
        state compared to the CA's ROAs, as well as all the CA's ROAs and how they
        affect the validatity state of known announcements.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          $ref: '#/components/responses/BgpAnalysisReport'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

  /cas/{ca_handle}/issues:
    get:
      operationId: show_ca_issues
      tags:
        - "Certificate Authorities"
      summary: Show issues for a CA.
      description: |
        Issues currently include reachability or authentication
        issues between the CA and its repository and/or parents. This may be
        extended with other issues in future.
      parameters:
        - $ref: '#/components/parameters/ca_handle'
      responses:
        '200':
          $ref: '#/components/responses/CertAuthIssues'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/GeneralErrorResponse'

externalDocs:
  description: Read the Krill documentation
  url: https://rpki.readthedocs.io/en/latest/krill/

components:
  securitySchemes:
    KRILL_ADMIN_TOKEN:
      type: http
      scheme: bearer
      bearerFormat: KRILL_ADMIN_TOKEN

  parameters:
    ca_handle:
      in: path
      name: ca_handle
      schema:
        $ref: '#/components/schemas/Handle'
      required: true
    child_handle:
      in: path
      name: child_handle
      schema:
        $ref: '#/components/schemas/Handle'
      required: true
    parent_handle:
      in: path
      name: parent_handle
      schema:
        $ref: '#/components/schemas/Handle'
      required: true
    publisher_handle:
      in: path
      name: publisher_handle
      schema:
        $ref: '#/components/schemas/Handle'
      required: true
    format:
      in: path
      name: format
      schema:
        type: string
        enum: ['json','xml']
      required: true
    seconds:
      in: path
      name: seconds
      schema:
        type: integer
      required: true

  schemas:
    # Types ordered fundamental to complex
    Handle:
      type: string
      maxLength: 255
      pattern: '[\-_A-Za-z0-9/]*'
    IdCert:
      type: string
      format: base64
    PemIdCert:
      type: object
      nullable: true
      properties:
        pem:
          type: string
          format: pem
        hash:
          type: string
          format: hash
    RepoInfo:
      type: object
      properties:
        base_uri:
          type: string
          format: uri
        rpki_notify:
          type: string
          format: uri
    
    Resources:
      type: object
      properties:
        asn:
          type: string
        v4:
          type: string
        v6:
          type: string
      example:
        asn: ""
        v4: "10.0.0.0/0"
        v6: "2001:db8::/32"
    
    ROA:
      type: object
      properties:
        asn:
          type: integer
        prefix:
          type: string
        max_length:
          type: integer
    
    ROADelta:
      type: object
      properties:
        added:
          type: array
          items:
            $ref: '#/components/schemas/ROA'
        removed:
          type: array
          items:
            $ref: '#/components/schemas/ROA'
    
    ServiceUri:
      type: string
      format: uri
    
    rfcCommon:
      type: object
      properties:
        tag:
          type: string
          nullable: true
        id_cert:
          $ref: '#/components/schemas/IdCert'

    Rfc8183ParentContact:
      type: object
      properties:
        type:
          type: string
        tag:
          type: string
          nullable: true
        id_cert:
          $ref: '#/components/schemas/IdCert'
        parent_handle:
          $ref: '#/components/schemas/Handle'
        child_handle:
          $ref: '#/components/schemas/Handle'
        service_uri:
          $ref: '#/components/schemas/ServiceUri'
      example:
        type: "rfc6492"
        tag: null
        id_cert: "MIIDNDCCAhygAwIBAgIBATANBgkqhkiG9w0BAQsFADAzMTEwLwYDVQQDEyg5NjczMEUwQTg2MkE0RDkyNjQ1NEY5RTgzNzYxMzMzQkI0Qjc0QTVDMB4XDTIxMDMwNDE2MTQwNFoXDTM2MDMwNDE2MTkwNFowMzExMC8GA1UEAxMoOTY3MzBFMEE4NjJBNEQ5MjY0NTRGOUU4Mzc2MTMzM0JCNEI3NEE1QzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOCNekDo59PLdJnfiPg9kUycEb3EF17TnnUEKJaCunheH/brWakMumqpBox3H2fn1XY7e2e1SFezp52yqcIggLUOj3K49SvTzdDCCwA2MGuzaDHK6IhOuLKH9D9BqA2FTWVr3PNk77g+Bn1TfKF+G+JMr3jvDMkJAW9+58vnl7UJ/g+H6/lWqWAW1JeA3go9B+qdxC9DA02h+7vXPGhsVeUw688LFBv1fDGlQFX02zx0uNrKQQHddL1aJIM01i5M+N3uWJ5u3wCJRvxAr/P9KNtCO1sTFxR2dE/8W0+rfJWkAnDcgzeDCjznICF1146Thjxir08dYlj5YAeR3c5r5L8CAwEAAaNTMFEwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUlnMOCoYqTZJkVPnoN2EzO7S3SlwwHwYDVR0jBBgwFoAUlnMOCoYqTZJkVPnoN2EzO7S3SlwwDQYJKoZIhvcNAQELBQADggEBAGUq4w7nv6Ez4kBdqfgyU0taKHgxIOTKJ6EwsDZj6eVGF6ThrutAonMVUeu1zs5ZW/uYaRWPffHzY8m1wdyrwYVw0HxRWY96vrhOOrVk32J6ip9V9bfFSjZLVnVcBz5V/odB++bJHhMoFNUaoqEGSNleiPotBtOHahlIL1EDEAt7bC5Kk7vEl0VmRJs7Hp1kpdZRJlVy7sLWL082hCJCulG57qL2UbsQ2wmFk+ImJ2RO3GSrNEI4//kHIw7GQFeeROfeb5HvyC/QOCzfBmMc/ipApuyzROSXHsE6CiaM2uWCjHs1NZBu+Za2EoFOhgYN1akeqqo50vRfO3Dd6Bm/rQY="
        parent_handle: "ta"
        child_handle: "testbed"
        service_uri: "https://localhost:3000/rfc6492/ta"
        
    # TODO: this looks identical to the Rfc8183ParentContact type immediately above? consolidate this?
    Rfc8183ParentResponse:
      type: object
      properties:
          type:
            type: string
          tag:
            type: string
            nullable: true
          id_cert:
            $ref: '#/components/schemas/IdCert'
          parent_handle:
            $ref: '#/components/schemas/Handle'
          child_handle:
            $ref: '#/components/schemas/Handle'
          service_uri:
            $ref: '#/components/schemas/ServiceUri'
      example:
        type: "rfc6492"
        tag: null
        id_cert: "MIIDNDCCAhygAwIBAgIBATANBgkqhkiG9w0BAQsFADAzMTEwLwYDVQQDEyg5NjczMEUwQTg2MkE0RDkyNjQ1NEY5RTgzNzYxMzMzQkI0Qjc0QTVDMB4XDTIxMDMwNDE2MTQwNFoXDTM2MDMwNDE2MTkwNFowMzExMC8GA1UEAxMoOTY3MzBFMEE4NjJBNEQ5MjY0NTRGOUU4Mzc2MTMzM0JCNEI3NEE1QzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOCNekDo59PLdJnfiPg9kUycEb3EF17TnnUEKJaCunheH/brWakMumqpBox3H2fn1XY7e2e1SFezp52yqcIggLUOj3K49SvTzdDCCwA2MGuzaDHK6IhOuLKH9D9BqA2FTWVr3PNk77g+Bn1TfKF+G+JMr3jvDMkJAW9+58vnl7UJ/g+H6/lWqWAW1JeA3go9B+qdxC9DA02h+7vXPGhsVeUw688LFBv1fDGlQFX02zx0uNrKQQHddL1aJIM01i5M+N3uWJ5u3wCJRvxAr/P9KNtCO1sTFxR2dE/8W0+rfJWkAnDcgzeDCjznICF1146Thjxir08dYlj5YAeR3c5r5L8CAwEAAaNTMFEwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUlnMOCoYqTZJkVPnoN2EzO7S3SlwwHwYDVR0jBBgwFoAUlnMOCoYqTZJkVPnoN2EzO7S3SlwwDQYJKoZIhvcNAQELBQADggEBAGUq4w7nv6Ez4kBdqfgyU0taKHgxIOTKJ6EwsDZj6eVGF6ThrutAonMVUeu1zs5ZW/uYaRWPffHzY8m1wdyrwYVw0HxRWY96vrhOOrVk32J6ip9V9bfFSjZLVnVcBz5V/odB++bJHhMoFNUaoqEGSNleiPotBtOHahlIL1EDEAt7bC5Kk7vEl0VmRJs7Hp1kpdZRJlVy7sLWL082hCJCulG57qL2UbsQ2wmFk+ImJ2RO3GSrNEI4//kHIw7GQFeeROfeb5HvyC/QOCzfBmMc/ipApuyzROSXHsE6CiaM2uWCjHs1NZBu+Za2EoFOhgYN1akeqqo50vRfO3Dd6Bm/rQY="
        parent_handle: "ta"
        child_handle: "testbed"
        service_uri: "https://localhost:3000/rfc6492/ta"

    Rfc8183RepositoryResponse:
      type: object
      properties:
        tag:
          type: string
          nullable: true
        id_cert:
          $ref: '#/components/schemas/IdCert'
        publisher_handle:
          $ref: '#/components/schemas/Handle'
        service_uri:
          $ref: '#/components/schemas/ServiceUri'
        repo_info:
          $ref: '#/components/schemas/RepoInfo'
      example:
        tag: null
        publisher_handle: "publisher"
        id_cert: 'MIID..6g=='
        service_uri: "https://repo.example.com/rfc8181/publisher/"
        repo_info:
          base_uri: 'rsync://localhost/repo/ca/'
          rpki_notify: 'https://localhost:3000/rrdp/notification.xml'
      
    Rfc8183PublisherRequest:
      type: object
      properties:
        tag:
          type: string
          nullable: true
        id_cert:
          $ref: '#/components/schemas/IdCert'
        publisher_handle:
          $ref: '#/components/schemas/Handle'
      example:
        tag: null
        publisher_handle: "publisher"
        id_cert: 'MIID..6g=='
        
      
      
    Rfc8183:
      allOf:
        - $ref: '#/components/schemas/rfcCommon'
        - type: object
          properties:
            child_handle:
              $ref: '#/components/schemas/Handle'
              
    RFC8183PublisherRequestXML:
      type: object
      properties:
        xmlns:
          type: string
          format: url
          xml:
            attribute: true
        version:
          type: integer
          xml:
            attribute: true
        publisher_handle:
          type: string
          xml:
            attribute: true
        publisher_bpki_ta:
          type: string
          format: base64
      xml:
        name: 'publisher_request'
      example:
        xmlns: http://www.hactrn.net/uris/rpki/rpki-setup/
        version: 1
        publisher_handle: 'child'
        publisher_bpki_ta: 'MIID..6g=='

    RFC8183RepositoryResponseXML:
      type: object
      properties:
        xmlns:
          type: string
          format: url
          xml:
            attribute: true
        version:
          type: integer
          xml:
            attribute: true
        service_uri:
          type: string
          format: uri
          xml:
            attribute: true
        publisher_handle:
          type: string
          xml:
            attribute: true
        sia_base:
          type: string
          xml:
            attribute: true
        rrdp_notification_uri:
          type: string
          xml:
            attribute: true
        repository_bpki_ta:
          type: string
          format: base64
      xml:
        name: 'repository_response'
      example:
        xmlns: http://www.hactrn.net/uris/rpki/rpki-setup/
        version: 1
        service_uri: 'https://localhost:3000/rfc6492/ta'
        publisher_handle: 'child'
        sia_base: 'rsync://localhost/repo/ca/'
        rrdp_notification_uri: 'https://localhost:3000/rrdp/notification.xml'
        repository_bpki_ta: 'MIID..6g=='
        
    RFC8183RequestXML:
      type: object
      properties:
        xmlns:
          type: string
          format: url
          xml:
            attribute: true
        version:
          type: integer
          xml:
            attribute: true
        child_handle:
          type: string
          xml:
            attribute: true
        child_bpki_ta:
          type: string
          format: base64
      xml:
        name: 'child_request'
      example:
        xmlns: http://www.hactrn.net/uris/rpki/rpki-setup/
        version: 1
        child_handle: 'child'
        child_bpki_ta: 'MIID..6g=='
    
    RFC8183ParentResponseXML:
      type: object
      properties:
        xmlns:
          type: string
          format: url
          xml:
            attribute: true
        version:
          type: integer
          xml:
            attribute: true
        service_uri:
          type: string
          format: uri
          xml:
            attribute: true
        child_handle:
          type: string
          xml:
            attribute: true
        parent_handle:
          type: string
          xml:
            attribute: true
        parent_bpki_ta:
          type: string
          format: base64
      xml:
        name: 'parent_response'
      example:
        xmlns: http://www.hactrn.net/uris/rpki/rpki-setup/
        version: 1
        service_uri: 'https://localhost:3000/rfc6492/ta'
        child_handle: 'child'
        parent_handle: 'ta'
        parent_bpki_ta: 'MIID..6g=='
    
    PendingKey:
      type: object
      properties:
        key_id:
          type: string
    
    CertifiedKey:
      allOf:
        - $ref: '#/components/schemas/PendingKey'
        - type: object
          properties:
            incoming_cert:
              type: object
              properties:
                cert:
                  type: string
                  format: base64
                uri:
                  type: string
                  format: uri
                resources:
                  $ref: '#/components/schemas/Resources'
            request:
              type: string
              nullable: true

    # Request bodies
    AddCARequest:
      type: object
      required:
        - handle
      properties:
        handle:
          allOf:
            - $ref: '#/components/schemas/Handle'
            - description: The handle attribute uniquely identifies the new Certificate Authority within this Krill instance.
            
    AddCAChildRequest:
      type: object
      required:
        - handle
        - resources
        - id_cert
      properties:
        handle:
          allOf:
            - $ref: '#/components/schemas/Handle'
            - description: The handle attribute uniquely identifies the new Certificate Authority within this Krill instance.
        resources:
          $ref: '#/components/schemas/Resources'
        id_cert:
          type: string
          format: base64
          
          
    UpdateCAChildRequest:
      type: object
      properties:
        id_cert:
          allOf:
            - $ref: '#/components/schemas/IdCert'
            - description: |
                Base64 of DER encoded is PEM encoded minus the BEGIN and END
                markers.
            - nullable: true
        resources:
          allOf:
            - $ref: '#/components/schemas/Resources'
            - nullable: true
    AddParentCARequest:
      type: object
      required:
        - handle
        - contact
      properties:
        handle:
          allOf:
            - $ref: '#/components/schemas/Handle'
            - description: The local handle by which your ca refers to this parent.
        contact:
          $ref: '#/components/schemas/Rfc8183ParentContact'

    # Error codes ordered ascending by error code
    CaRepoSameResponse:
      type: object
      required:
        - label
        - msg
        - args
      properties:
        label:
          type: string
          enum: [ca-repo-same]
        msg:
          type: string
          example: CA 'ca' already using this repository
        args:
          required:
            - ca
          properties:
            ca:
              type: string
              example: ca
    CaRepoIssueResponse:
      type: object
      required:
        - label
        - msg
        - args
      properties:
        label:
          type: string
          enum: [ca-repo-issue]
        msg:
          type: string
          example: CA 'ca' got error from repository 'cannot connect'
        args:
          required:
            - ca
            - cause
          properties:
            ca:
              type: string
              example: ca
            cause:
              type: string
              example: cannot connect
    CaChildDuplicateResponse:
      type: object
      required:
        - label
        - msg
        - args
      properties:
        label:
          type: string
          enum: [ca-child-duplicate]
        msg:
          type: string
          example: CA 'ca' already has a child named 'child'
        args:
          required:
            - ca
            - child
          properties:
            ca:
              type: string
              example: ca
            child:
              type: string
              example: child


    CaChildUnknownResponse:
      type: object
      required:
        - label
        - msg
        - args
      properties:
        label:
          type: string
          enum: [ca-child-unknown]
        msg:
          type: string
          example: CA 'ca' does not have a child named 'child'
        args:
          required:
            - ca
            - child
          properties:
            ca:
              type: string
              example: ca
            child:
              type: string
              example: child

    CaChildResourcesRequiredResponse:
      type: object
      required:
        - label
        - msg
        - args
      properties:
        label:
          type: string
          enum: [ca-child-resources-required]
        msg:
          type: string
          example: Child 'child' for CA 'ca' MUST have resources specified
        args:
          required:
            - ca
            - child
          properties:
            ca:
              type: string
              example: ca
            child:
              type: string
              example: child

    CaChildResourcesExtraResponse:
      type: object
      required:
        - label
        - msg
        - args
      properties:
        label:
          type: string
          enum: [ca-child-resources-extra]
        msg:
          type: string
          example: Child cannot have resources not held by parent.
        args:
          required:
            - ca
            - child
          properties:
            ca:
              type: string
              example: ca
            child:
              type: string
              example: child

    CaParentDuplicateResponse:
      type: object
      required:
        - label
        - msg
        - args
      properties:
        label:
          type: string
          enum: [ca-parent-duplicate]
        msg:
          type: string
          example: CA 'ca' already has a parent named 'parent'
        args:
          required:
            - ca
            - parent
          properties:
            ca:
              type: string
              example: ca
            parent:
              type: string
              example: parent

    CaParentUnknownResponse:
      type: object
      required:
        - label
        - msg
        - args
      properties:
        label:
          type: string
          enum: [ca-parent-unknown]
        msg:
          type: string
          example: CA 'ca' does not have a parent named 'parent'
        args:
          required:
            - ca
            - parent
          properties:
            ca:
              type: string
              example: ca
            parent:
              type: string
              example: parent

    CaParentIssueResponse:
      type: object
      required:
        - label
        - msg
        - args
      properties:
        label:
          type: string
          enum: [ca-parent-issue]
        msg:
          type: string
          example: CA 'ca' got error from parent 'parent' cause
        args:
          required:
            - ca
            - parent
            - cause
          properties:
            ca:
              type: string
              example: ca
            parent:
              type: string
              example: parent
            cause:
              type: string
              example: cause

    BgpAnalysisAdvice:
      type: object
      required:
        - effect
        - suggestion
      properties:
        effect:
          $ref: '#/components/schemas/BgpAnalysisReport'
        suggestion:
          $ref: '#/components/schemas/BgpAnalysisSuggestion'

    BgpAnalysisSuggestion:
      type: object
      required:
        - stale
        - too_permissive
        - as0_redundant
        - keep
        - not_found
        - invalid_asn
        - invalid_length
        - keep_disallowing
      properties:
        stale:
          type: array
          items:
            type: object
            required:
              - asn
              - prefix
              - max_length
            properties:
              asn:
                type: integer
              prefix:
                type: string
              max_length:
                type: integer
                nullable: true

        too_permissive:
          type: array
          items:
            type: object
            required:
              - current
              - new
            properties:
              current:
                type: object
                required:
                  - asn
                  - prefix
                  - max_length
                properties:
                  asn:
                    type: integer
                  prefix:
                    type: string
                  max_length:
                    type: integer
                    nullable: true
              new:
                type: array
                items:
                  type: object
                  required:
                    - asn
                    - prefix
                    - max_length
                  properties:
                    asn:
                      type: integer
                    prefix:
                      type: string
                    max_length:
                      type: integer
                      nullable: true

        as0_redundant:
          type: array
          items:
            type: object
            required:
              - asn
              - prefix
              - max_length
            properties:
              asn:
                type: integer
              prefix:
                type: string
              max_length:
                type: integer
                nullable: true

        keep:
          type: array
          items:
            type: object
            required:
              - asn
              - prefix
              - max_length
            properties:
              asn:
                type: integer
              prefix:
                type: string
              max_length:
                type: integer
                nullable: true

        not_found:
          type: array
          items:
            type: object
            required:
              - asn
              - prefix
            properties:
              asn:
                type: integer
              prefix:
                type: string

        invalid_asn:
          type: array
          items:
            type: object
            required:
              - asn
              - prefix
            properties:
              asn:
                type: integer
              prefix:
                type: string

        invalid_length:
          type: array
          items:
            type: object
            required:
              - asn
              - prefix
            properties:
              asn:
                type: integer
              prefix:
                type: string

        keep_disallowing:
          type: array
          items:
            type: object
            required:
              - asn
              - prefix
            properties:
              asn:
                type: integer
              prefix:
                type: string

    BgpAnalysisReport:
      type: array
      items:
        type: object
        required:
          - asn
          - prefix
          - max_length
          - state
          - allowed_by
          - disallowed_by
          - made_redundant_by
          - authorizes
          - disallows
        properties:
          asn:
            type: integer
          prefix:
            type: string
          max_length:
            type: integer
            nullable: true
          state:
            type: string
          allowed_by:
            type: array
            items:
              type: object
              required:
                - asn
                - prefix
                - max_length
              properties:
                asn:
                  type: integer
                prefix:
                  type: string
                max_length:
                  type: integer
                  nullable: true
          disallowed_by:
            type: array
            items:
              type: object
              required:
                - asn
                - prefix
                - max_length
              properties:
                asn:
                  type: integer
                prefix:
                  type: string
                max_length:
                  type: integer
                  nullable: true
          made_redundant_by:
            type: array
            items:
              type: object
              required:
                - asn
                - prefix
                - max_length
              properties:
                asn:
                  type: integer
                prefix:
                  type: string
                max_length:
                  type: integer
                  nullable: true
          allows:
            type: array
            items:
              type: object
              required:
                - asn
                - prefix
              properties:
                asn:
                  type: integer
                prefix:
                  type: string
          disallows:
            type: array
            items:
              type: object
              required:
                - asn
                - prefix
              properties:
                asn:
                  type: integer
                prefix:
                  type: string

    RoaDeltaErrorResponse:
      type: object
      required:
        - label
        - msg
        - delta_error
      properties:
        label:
          type: string
          enum: [ca-roa-delta-error]
        msg:
          type: string
          example: Delta rejected, see included json
        delta_error:
          $ref: '#/components/schemas/RoaDeltaErrorSchema'

    RoaDeltaErrorSchema:
      type: object
      required:
        - duplicates
        - covered
        - notheld
        - unknowns
        - invalid_length
        - covering
        - as0_exists
        - as0_overlaps
      properties:
        duplicates:
          type: array
          items:
            type: object
            required:
              - asn
              - prefix
              - max_length
            properties:
              asn:
                type: integer
              prefix:
                type: string
              max_lenght:
                type: integer

        covered:
          type: array
          items:
            type: object
            required:
              - addition
              - covered_by
            properties:
              addition:
                type: object
                required:
                  - asn
                  - prefix
                  - max_length
                properties:
                  asn:
                    type: integer
                  prefix:
                    type: string
                  max_lenght:
                    type: integer
              covered_by:
                type: object
                required:
                  - asn
                  - prefix
                  - max_length
                properties:
                  asn:
                    type: integer
                  prefix:
                    type: string
                  max_length:
                    type: integer

        notheld:
          type: array
          items:
            type: object
            required:
              - asn
              - prefix
              - max_length
            properties:
              asn:
                type: integer
              prefix:
                type: string
              max_lenght:
                type: integer

        unknowns:
          type: array
          items:
            type: object
            required:
              - asn
              - prefix
              - max_length
            properties:
              asn:
                type: integer
              prefix:
                type: string
              max_lenght:
                type: integer

        invalid_length:
          type: array
          items:
            type: object
            required:
              - asn
              - prefix
              - max_length
            properties:
              asn:
                type: integer
              prefix:
                type: string
              max_lenght:
                type: integer

        covering:
          type: array
          items:
            type: object
            required:
              - addition
              - covering
            properties:
              addition:
                type: object
                required:
                  - asn
                  - prefix
                  - max_length
                properties:
                  asn:
                    type: integer
                  prefix:
                    type: string
                  max_lenght:
                    type: integer
              covering:
                type: array
                items:
                  type: object
                  required:
                    - asn
                    - prefix
                    - max_length
                  properties:
                    asn:
                      type: integer
                    prefix:
                      type: string
                    max_lenght:
                      type: integer

        as0_exists:
          type: array
          items:
            type: object
            required:
              - addition
              - existing_as0
            properties:
              addition:
                type: object
                required:
                  - asn
                  - prefix
                  - max_length
                properties:
                  asn:
                    type: integer
                  prefix:
                    type: string
                  max_lenght:
                    type: integer
              existing_as0:
                type: object
                required:
                  - asn
                  - prefix
                  - max_length
                properties:
                  asn:
                    type: integer
                  prefix:
                    type: string
                  max_lenght:
                    type: integer

        as0_overlaps:
          type: array
          items:
            type: object
            required:
              - addition
              - existing
            properties:
              addition:
                type: object
                required:
                  - asn
                  - prefix
                  - max_length
                properties:
                  asn:
                    type: integer
                  prefix:
                    type: string
                  max_lenght:
                    type: integer
              existing:
                type: array
                items:
                  type: object
                  required:
                    - asn
                    - prefix
                    - max_length
                  properties:
                    asn:
                      type: integer
                    prefix:
                      type: string
                    max_lenght:
                      type: integer


    CaDuplicateResponse:
      type: object
      required:
        - label
        - msg
        - args
      properties:
        label:
          type: string
          enum: [ca-duplicate]
        msg:
          type: string
          example: CA 'ca' was already initialised
        args:
          required:
            - ca
          properties:
            ca:
              type: string
              example: ca

    CaUnknownResponse:
      type: object
      required:
        - label
        - msg
        - args
      properties:
        label:
          type: string
          enum: [ca-unknown]
        msg:
          type: string
          example: CA 'ca' is unknown
        args:
          required:
            - ca
          properties:
            ca:
              type: string
              example: ca

    GeneralErrorResponse:
      type: object
      required:
        - label
        - msg
        - args
      properties:
        label:
          type: string
          enum: [general-error]
        msg:
          type: string
          example: cause
        args:
          required:
            - cause
          properties:
            cause:
              type: string
              example: cause

  responses:
    Success:
      description: Success.

    Forbidden:
      description: Forbidden (incorrect authentication token).

    NotFound:
      description: Not Found.

    CertAuthIssues:
      description: Issues for a CA (e.g. cannot reach parent)
      content:
        application/json:
          schema:
            type: object
            properties:
              repo:
                type: string
              parents:
                type: array
                items:
                  type: string
                  additionalProperties:
                    type: string
            example:
              repo: "repostory unreachable"
              parents:
                "rir": "denied!"
                "nir": "cannot connect"

    CaRepoSameResponse:
      description: Same Repository
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaRepoSameResponse'

    CaRepoIssueResponse:
      description: Issue from repository for CA
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaRepoIssueResponse'

    CaChildDuplicateResponse:
      description: Duplicate child
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaChildDuplicateResponse'

    CaChildUnknownResponse:
      description: Unknown child
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaChildUnknownResponse'

    CaChildResourcesRequiredResponse:
      description: Child requires resources
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaChildResourcesRequiredResponse'

    CaChildResourcesExtraResponse:
      description: Child resources not held by CA
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaChildResourcesExtraResponse'

    CaParentDuplicateResponse:
      description: Duplicate parent
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaParentDuplicateResponse'

    CaParentUnknownResponse:
      description: Unknown parent
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaParentUnknownResponse'

    CaParentIssueResponse:
      description: Issue communicating with parent
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaParentIssueResponse'

    RoaDeltaError:
      description: Error in submitted ROA delta
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoaDeltaErrorResponse'
          example:
            label: ca-roa-delta-error
            msg: 'Delta rejected, see included json'
            args: {}
            delta_error:
              duplicates:
                - asn: 1
                  prefix: 10.0.0.0/20
                  max_length: 24
              covered:
                - addition:
                    asn: 1
                    prefix: 10.0.0.0/24
                  covered_by:
                    asn: 1
                    prefix: 10.0.0.0/20
                    max_length: 24
              notheld:
                - asn: 1
                  prefix: 10.128.0.0/9
              unknowns:
                - asn: 1
                  prefix: 192.168.0.0/16
              invalid_length:
                - asn: 1
                  prefix: 10.0.1.0/25
              covering:
                - addition:
                    asn: 1
                    prefix: 10.0.0.0/16
                    max_length: 24
                  covering:
                    - asn: 1
                      prefix: 10.0.0.0/20
                      max_length: 24
                    - asn: 1
                      prefix: 10.0.128.0/24
              as0_exists:
                - addition:
                    asn: 1
                    prefix: 10.1.0.0/24
                  existing_as0:
                    asn: 0
                    prefix: 10.1.0.0/24
              as0_overlaps:
                - addition:
                    asn: 0
                    prefix: 10.2.0.0/16
                  existing:
                    - asn: 1
                      prefix: 10.2.0.0/24
                    - asn: 1
                      prefix: 10.2.1.0/24


    BgpAnalysisReport:
      description: |
        Full ROAs vs known BGP Announcements report for this CA.

        This is an array of both ROAs and Announcements, including all optional
        information that may be applicable to either:

        <table>
          <tr><th>element</th><th>applies to</th><th>meaning</th></tr>
          <tr><td>allowed_by</td><td>announcement</td><td>List of ROAs authorizing this announcement</td></tr>
          <tr><td>disallowed_by</td><td>announcement</td><td>List of ROAs disallowing this announcement, see state for main reason</td></tr>
          <tr><td>made_redundant_by</td><td>roa</td><td>AS0 ROA for prefix which is authorised for a real ASN</td></tr>
          <tr><td>authorizes</td><td>roa</td><td>List of announcements authorized by this ROA</td></tr>
          <tr><td>disallows</td><td>roa</td><td>List of announcements disallowed by this ROA</td></tr>
        </table>

        Furthermore the schema includes max_length. This value will not be present for announcements. Confusing as this might be, this allows for parsing all kinds of states in a single table.

        Possible state values are:

        <table style="border: 1px solid black;">
          <tr><th>state</th><th>meaning</th></tr>
          <tr><td>roa_seen</td><td>The ROA covers BGP announcements</td></tr>
          <tr><td>roa_unseen</td><td>The ROA covers no BGP announcements</td></tr>
          <tr><td>roa_too_permissive</td><td>The ROA authorizes additional announcements</td></tr>
          <tr><td>roa_as0</td><td>AS0 ROA which may disallow announcements</td></tr>
          <tr><td>announcement_valid</td><td>BGP announcement authorized by a ROA</td></tr>
          <tr><td>announcement_invalid_length</td><td>BGP announcement too specific for the ASN</td></tr>
          <tr><td>announcement_invalid_asn</td><td>BGP announcement prefix only allowed for othes ASNs</td></tr>
          <tr><td>announcement_not_found</td><td>BGP announcement not covered by ROAs</td></tr>
          <tr><td>roa_no_announcement_info</td><td>ROA exists, but no BGP info available for analysis</td></tr>
        </table>


      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BgpAnalysisReport'
          example:
            - asn: 64497
              prefix: 192.168.1.0/24
              state: roa_seen
              authorizes:
                - asn: 64497
                  prefix: 192.168.1.0/24
            - asn: 64497
              prefix: 10.0.3.0/24
              state: roa_unseen
            - asn: 64498
              prefix: 192.168.1.0/24
              state: roa_unseen
            - asn: 64496
              prefix: 10.0.0.0/22
              max_length: 23
              state: roa_too_permissive
              authorizes:
                - asn: 64496
                  prefix: 10.0.0.0/22
                - asn: 64496
                  prefix: 10.0.2.0/23
              disallows:
                - asn: 64497
                  prefix: 10.0.0.0/22
                - asn: 64496
                  prefix: 10.0.0.0/24
            - asn: 0
              prefix: 10.0.4.0/24
              state: roa_as0
            - asn: 0
              prefix: 192.168.1.0/24
              state: roa_as0_redundant
              made_redundant_by:
                - asn: 64497
                  prefix: 192.168.1.0/24
                - asn: 64498
                  prefix: 192.168.1.0/24
            - asn: 64496
              prefix: 10.0.0.0/22
              state: announcement_valid
              allowed_by:
                asn: 64496
                prefix: 10.0.0.0/22
                max_length: 23
            - asn: 64496
              prefix: 10.0.2.0/23
              state: announcement_valid
              allowed_by:
                asn: 64496
                prefix: 10.0.0.0/22
                max_length: 23
            - asn: 64497
              prefix: 192.168.1.0/24
              state: announcement_valid
              allowed_by:
                asn: 64497
                prefix: 192.168.1.0/24
            - asn: 64496
              prefix: 10.0.0.0/24
              state: announcement_invalid_length
              disallowed_by:
                - asn: 64496
                  prefix: 10.0.0.0/22
                  max_length: 23
            - asn: 64497
              prefix: 10.0.0.0/22
              state: announcement_invalid_asn
              disallowed_by:
                - asn: 64496
                  prefix: 10.0.0.0/22
                  max_length: 23
            - asn: 64497
              prefix: 10.0.0.0/21
              state: announcement_not_found
            - asn: 64496
              prefix: 192.168.0.0/24
              state: announcement_not_found
            - asn: 64497
              prefix: 192.168.0.0/24
              state: announcement_not_found


    CaDuplicateResponse:
      description: CA handle already in use.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaDuplicateResponse'

    CaUnknownResponse:
      description: Unknown CA
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaUnknownResponse'

    GeneralErrorResponse:
      description: General CA Server issue.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralErrorResponse'

    GetCA:
      description: Success.
      content:
        application/json:
          schema:
            type: object
            properties:
              handle:
                $ref: '#/components/schemas/Handle'
              id_cert:
                $ref: '#/components/schemas/PemIdCert'
              repo_info:
                $ref: '#/components/schemas/RepoInfo'
              parents:
                type: array
                items:
                  type: object
                  properties:
                    handle:
                      $ref: '#/components/schemas/Handle'
                    kind:
                      type: string
              resources:
                $ref: '#/components/schemas/Resources'
              resources_classes:
                type: object
                additionalProperties:
                  x-additionalPropertiesName: resource index
                  type: object
                  properties:
                    name_space:
                      type: string
                    parent_handle:
                      $ref: '#/components/schemas/Handle'
                    keys:
                      oneOf:
                        - type: object
                          title: pending
                          properties:
                            pending:
                              type: object
                              properties:
                                pending_key:
                                  $ref: '#/components/schemas/PendingKey'
                        - type: object
                          title: active
                          properties:
                            active:
                              type: object
                              properties:
                                active_key:
                                  $ref: '#/components/schemas/CertifiedKey'
                        - type: object
                          title: roll_pending
                          properties:
                            roll_pending:
                              type: object
                              properties:
                                active_key:
                                  $ref: '#/components/schemas/CertifiedKey'
                                pending_key:
                                  $ref: '#/components/schemas/CertifiedKey'
                        - type: object
                          title: roll_new
                          properties:
                            roll_new:
                              type: object
                              properties:
                                new_key:
                                  $ref: '#/components/schemas/CertifiedKey'
                                active_key:
                                  $ref: '#/components/schemas/CertifiedKey'
                        - type: object
                          title: roll_old
                          properties:
                            roll_old:
                              type: object
                              properties:
                                old_key:
                                  $ref: '#/components/schemas/CertifiedKey'
                                active_key:
                                  $ref: '#/components/schemas/CertifiedKey'
                    current_objects:
                      type: object
                      additionalProperties:
                        x-additionalPropertiesName: object name
                        type: object
                        properties:
                          content:
                            type: string
                            format: base64
                          serial:
                            type: string
                          expires:
                            type: string
                            format: date-time
              children:
                type: array
                items:
                  type: string
          example:
            handle: 'ca'
            repo_info:
              base_uri: 'rsync://localhost/repo/ca/'
              rpki_notify: 'https://localhost:3000/rrdp/notification.xml'
            parents:
              - handle: 'ta'
                kind: 'ta'
            resources:
              asn: 'AS1-AS10'
              v4: '10.0.0.0/8'
              v6: '::/128'
            resource_classes:
              '0':
                name_space: '0'
                parent_handle: 'ta'
                keys:
                  active:
                    active_key:
                      key_id: 'B738..8820'
                      incoming_cert:
                        cert: '<base64>'
                        uri: 'rsync://localhost/repo/ta/0/B738..8820.cer'
                        resources:
                          asn: 'AS0-AS10'
                          v4: '10.0.0.0/8'
                          v6: '::/128'
                      request: null
                current_objects:
                  '2DCE..5337.crl':
                    content: '<base64>'
                    serial: '2'
                    expires: '2019-11-27T10:56:16.166449Z'
                  '2DCE..5337.mft':
                    content: '<base64>'
                    serial: '87065729750653489815092730763761996670858255271'
                    expires: '2019-11-27T10:56:16.172248Z'
            children:
              - 'child'

    ListCAs:
      description: Success.
      content:
        application/json:
          schema:
            type: object
            properties:
              cas:
                type: array
                items:
                  type: object
                  properties:
                    handle:
                      allOf:
                        - $ref: '#/components/schemas/Handle'
                        - description: The RFC-8183 handle that uniquely identifies the CA in this Krill instance.

    GetChildCA:
      description: Success.
      content:
        application/json:
          schema:
            type: object
            properties:
              id_cert:
                $ref: '#/components/schemas/PemIdCert'
              entitled_resources:
                $ref: '#/components/schemas/Resources'



    GetRepositoryForCA:
      description: Success.
      content:
        application/json:
          schema:
            type: object
            properties:
              contact:
                type: object
                properties:
                  repository_response:
                    $ref: '#/components/schemas/Rfc8183RepositoryResponse'
          examples:
            contact:
              value:
                contact:
                  repository_response:
                    tag: null
                    publisher_handle: 'ca'
                    id_cert: 'MIID..Vg=='
                    service_uri: 'https://localhost:3000/rfc8181/ca'
                    repo_info:
                      base_uri: 'rsync://localhost/repo/ca/'
                      rpki_notify: 'https://localhost:3000/rrdp/notificati.xml'

    GetCAHistory:
      description: Success.
      content:
        application/json:
          schema:
            type: object
            properties:
              init:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Handle'
                  version:
                    type: integer
                  details:
                    type: object
              events:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      $ref: '#/components/schemas/Handle'
                    version:
                      type: integer
                    details:
                      type: object

    Rfc8183ParentResponse:
      description: Success.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rfc8183ParentResponse'
    
    Rfc8183ParentContact:
      description: Success.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rfc8183ParentContact'

    Rfc8183O:
      description: Success.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rfc8183'

