######################################################################################
#                                                                                    #
#                       ----==== SIGNER CONFIGURATION ====----                       #
#                                                                                    #
#    The settings below can be used to configure the signer used by Krill            #
#                                                                                    #
######################################################################################


# Signers
# -------
#
# Which signers Krill should use. The default signer uses OpenSSL to generate key
# pairs and to create signatures and stores them in files on disk. Krill also supports
# PKCS#11 and KMIP based signers.
#
# The signers are defined as a collection of zero or more signers. If none are defined
# the built-in OpenSSL signer is used with a default key path and name and will be
# used as the default signer for key generation including for roll over.
#
# If at least one signer is defined then the built-in OpenSSL signer will not be used
# unless a signer for it is explicitly defined in the collection of signers.
#
# Signers must have "type" and "name" keys. All signers also support optional keys
# "default" (use this signer to generate new keys) and "keyroll" (use this signer to
# generate new keys on key roll). The "default" and "keyroll" keys are false if not
# specified, unless only a single signer is defined in which case both are true. All
# other keys are "type" dependent. See below for more information on the keys
# supported per "type".
#
# Below is an example configuration. Normally you would define only one signer, or
# two if migrating from one signer to another.
## 
#   [[signers]]
#   type = "OpenSSL"
#   name = "Signer 1"
#
#   [[signers]]
#   type = "OpenSSL"
#   name = "Signer 2"
#   keys_path = "/tmp/keys"
#   keyroll = true
#
#   [[signers]]
#   type = "PKCS#11"
#   name = "Kryptus via PKCS#11"
#   lib_path = "/usr/local/lib/kryptus/libknetpkcs11_64/libkNETPKCS11.so"
#   user_pin = "xxxxxx"
#   slot_id = 313129207
#
#   [[signers]]
#   type = "PKCS#11"
#   name = "SoftHSMv2 via PKCS#11"
#   lib_path = "/usr/local/lib/softhsm/libsofthsm2.so"
#   user_pin = "xxxx"
#   slot_id = 0x12a9f8f7
#   default = true
#
#   [[signers]]
#   type = "KMIP"
#   name = "Kryptus via KMIP"
#   host = "my.hsm.example.com"
#   port = 5696
#   server_ca_cert_path = "/path/to/some/ca.pem"
#   username = "user1"
#   password = "xxxxxx"
#
# The default configuration is equivalent to:
#
#   [[signers]]
#   type = "OpenSSL"
#   name = "OpenSSL"
#   keys_path = "$datadir/keys"
#   default = true
#   keyroll = true


# OpenSSL signer configuration
# ----------------------------
#
# This signer uses the operating system provided OpenSSL library (or on older
# operating systems it may use a modern version of the OpenSSL library compiled into
# Krill itself) to generate keys, to sign data using them and to generate random
# values. Keys are persisted as files on disk in a dedicated directory.
#
# Key        Value Type   Default Value    Req'd  Description
# ------------------------------------------------------------------------------------
# keys_path  path string  "$datadir/keys"  No     The directory in which key files
#                                                 should be created.
#


# PKCS#11 signer configuration
#
# Krill interacts with a PKCS#11 v1.20 compatible cryptographic device via the Cryptoki
# interface which involves loading a library file from disk at runtime to which all
# cryptographic operations will be delegated. The library will in turn communicate
# with the actual cryptographic device.
#
# Note: The PKCS#11 library is not part of Krill nor is it supplied with Krill.
# Please consult the documentation for your PKCS#11 compatible cryptographic device
# to learn where you can find the .so library file. For example when using SoftHSMv2
# the library might be available at /usr/local/lib/softhsm/libsofthsm2.so. The
# device must already have been configured with a user PIN code and slot ID to be
# used by Krill.
#
# Key        Value Type   Default Value    Req'd  Description
# ------------------------------------------------------------------------------------
# lib_path   path string  None             Yes    The path to the .so dynamic library
#                                                 file to load.
# user_pin   string       None             Yes    The pin or password or secret value
#                                                 used to authenticate with the
#                                                 PKCS#11 provider. The format varies
#                                                 by provider, SoftHSMv2 uses numeric
#                                                 PINs such as "12345" while AWS
#                                                 CloudHSM expects this to be in the
#                                                 form "username:password".
# slot_label string       None             No *1  The label of the PKCS#11 slot to
#                                                 use.
# slot_id    integer      None             No *1  An integer PKCS#11 "slot" ID. Can
#                                                 also be expressed in hexadecimal,
#                                                 e.g. 0x12AB.
#
# *1: One of slot_label or slot_id is required.


# KMIP signer configuration
#
# Krill interacts with a KMIP v1.4 compatible cryptographic device via the TCP+TTVL
# protocol. This requires knowing the hostname, port number, and details required to
# authenticate with the provider.
#
# Key                  Value Type   Default Value    Req'd  Description
# ----------------------------------------------------------------------------------------------
# host                 string       None             Yes    The fully qualified domain name to
#                                                           connect to via TCP.
# port                 integer      5696             Yes    The TCP port number to connect to.
# insecure             boolean      false            No     Whether or not to disable checks
#                                                           of the server provided TLS
#                                                           certificate.
# server_ca_cert_path               None             No     Path strings to PEM certificate
# client_cert_path                  None             No     files to verify the server identity
# client_cert_private_key_path      None             No     (if insecure is false) and to
#                                                           identify your Krill to the server.
# username             string       None             No     Username and password to identify
# password             string       None             No     your Krill to the server.